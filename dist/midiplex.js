(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["MidiPlex"] = factory();
	else
		root["MidiPlex"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/lodash.clonedeep/index.js":
/*!************************************************!*\
  !*** ./node_modules/lodash.clonedeep/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, module) {/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack://MidiPlex/./node_modules/lodash.clonedeep/index.js?");

/***/ }),

/***/ "./node_modules/nanoid/format.browser.js":
/*!***********************************************!*\
  !*** ./node_modules/nanoid/format.browser.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n\n\n//# sourceURL=webpack://MidiPlex/./node_modules/nanoid/format.browser.js?");

/***/ }),

/***/ "./node_modules/shortid/index.js":
/*!***************************************!*\
  !*** ./node_modules/shortid/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nmodule.exports = __webpack_require__(/*! ./lib/index */ \"./node_modules/shortid/lib/index.js\");\n\n\n//# sourceURL=webpack://MidiPlex/./node_modules/shortid/index.js?");

/***/ }),

/***/ "./node_modules/shortid/lib/alphabet.js":
/*!**********************************************!*\
  !*** ./node_modules/shortid/lib/alphabet.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar randomFromSeed = __webpack_require__(/*! ./random/random-from-seed */ \"./node_modules/shortid/lib/random/random-from-seed.js\");\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n\n\n//# sourceURL=webpack://MidiPlex/./node_modules/shortid/lib/alphabet.js?");

/***/ }),

/***/ "./node_modules/shortid/lib/build.js":
/*!*******************************************!*\
  !*** ./node_modules/shortid/lib/build.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar generate = __webpack_require__(/*! ./generate */ \"./node_modules/shortid/lib/generate.js\");\nvar alphabet = __webpack_require__(/*! ./alphabet */ \"./node_modules/shortid/lib/alphabet.js\");\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n\n\n//# sourceURL=webpack://MidiPlex/./node_modules/shortid/lib/build.js?");

/***/ }),

/***/ "./node_modules/shortid/lib/generate.js":
/*!**********************************************!*\
  !*** ./node_modules/shortid/lib/generate.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar alphabet = __webpack_require__(/*! ./alphabet */ \"./node_modules/shortid/lib/alphabet.js\");\nvar random = __webpack_require__(/*! ./random/random-byte */ \"./node_modules/shortid/lib/random/random-byte-browser.js\");\nvar format = __webpack_require__(/*! nanoid/format */ \"./node_modules/nanoid/format.browser.js\");\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n\n\n//# sourceURL=webpack://MidiPlex/./node_modules/shortid/lib/generate.js?");

/***/ }),

/***/ "./node_modules/shortid/lib/index.js":
/*!*******************************************!*\
  !*** ./node_modules/shortid/lib/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar alphabet = __webpack_require__(/*! ./alphabet */ \"./node_modules/shortid/lib/alphabet.js\");\nvar build = __webpack_require__(/*! ./build */ \"./node_modules/shortid/lib/build.js\");\nvar isValid = __webpack_require__(/*! ./is-valid */ \"./node_modules/shortid/lib/is-valid.js\");\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = __webpack_require__(/*! ./util/cluster-worker-id */ \"./node_modules/shortid/lib/util/cluster-worker-id-browser.js\") || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n\n\n//# sourceURL=webpack://MidiPlex/./node_modules/shortid/lib/index.js?");

/***/ }),

/***/ "./node_modules/shortid/lib/is-valid.js":
/*!**********************************************!*\
  !*** ./node_modules/shortid/lib/is-valid.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar alphabet = __webpack_require__(/*! ./alphabet */ \"./node_modules/shortid/lib/alphabet.js\");\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n\n\n//# sourceURL=webpack://MidiPlex/./node_modules/shortid/lib/is-valid.js?");

/***/ }),

/***/ "./node_modules/shortid/lib/random/random-byte-browser.js":
/*!****************************************************************!*\
  !*** ./node_modules/shortid/lib/random/random-byte-browser.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n\n\n//# sourceURL=webpack://MidiPlex/./node_modules/shortid/lib/random/random-byte-browser.js?");

/***/ }),

/***/ "./node_modules/shortid/lib/random/random-from-seed.js":
/*!*************************************************************!*\
  !*** ./node_modules/shortid/lib/random/random-from-seed.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n\n\n//# sourceURL=webpack://MidiPlex/./node_modules/shortid/lib/random/random-from-seed.js?");

/***/ }),

/***/ "./node_modules/shortid/lib/util/cluster-worker-id-browser.js":
/*!********************************************************************!*\
  !*** ./node_modules/shortid/lib/util/cluster-worker-id-browser.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = 0;\n\n\n//# sourceURL=webpack://MidiPlex/./node_modules/shortid/lib/util/cluster-worker-id-browser.js?");

/***/ }),

/***/ "./node_modules/webmidi/webmidi.min.js":
/*!*********************************************!*\
  !*** ./node_modules/webmidi/webmidi.min.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n\nWebMidi v2.5.1\n\nWebMidi.js helps you tame the Web MIDI API. Send and receive MIDI messages with ease. Control instruments with user-friendly functions (playNote, sendPitchBend, etc.). React to MIDI input with simple event listeners (noteon, pitchbend, controlchange, etc.).\nhttps://github.com/djipco/webmidi\n\n\nThe MIT License (MIT)\n\nCopyright (c) 2015-2019, Jean-Philippe Côté\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and\nassociated documentation files (the \"Software\"), to deal in the Software without restriction,\nincluding without limitation the rights to use, copy, modify, merge, publish, distribute,\nsublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial\nportions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\nNOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES\nOR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n\n!function(scope){\"use strict\";function WebMidi(){if(WebMidi.prototype._singleton)throw new Error(\"WebMidi is a singleton, it cannot be instantiated directly.\");(WebMidi.prototype._singleton=this)._inputs=[],this._outputs=[],this._userHandlers={},this._stateChangeQueue=[],this._processingStateChange=!1,this._midiInterfaceEvents=[\"connected\",\"disconnected\"],this._nrpnBuffer=[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],this._nrpnEventsEnabled=!0,this._nrpnTypes=[\"entry\",\"increment\",\"decrement\"],this._notes=[\"C\",\"C#\",\"D\",\"D#\",\"E\",\"F\",\"F#\",\"G\",\"G#\",\"A\",\"A#\",\"B\"],this._semitones={C:0,D:2,E:4,F:5,G:7,A:9,B:11},Object.defineProperties(this,{MIDI_SYSTEM_MESSAGES:{value:{sysex:240,timecode:241,songposition:242,songselect:243,tuningrequest:246,sysexend:247,clock:248,start:250,continue:251,stop:252,activesensing:254,reset:255,midimessage:0,unknownsystemmessage:-1},writable:!1,enumerable:!0,configurable:!1},MIDI_CHANNEL_MESSAGES:{value:{noteoff:8,noteon:9,keyaftertouch:10,controlchange:11,channelmode:11,nrpn:11,programchange:12,channelaftertouch:13,pitchbend:14},writable:!1,enumerable:!0,configurable:!1},MIDI_REGISTERED_PARAMETER:{value:{pitchbendrange:[0,0],channelfinetuning:[0,1],channelcoarsetuning:[0,2],tuningprogram:[0,3],tuningbank:[0,4],modulationrange:[0,5],azimuthangle:[61,0],elevationangle:[61,1],gain:[61,2],distanceratio:[61,3],maximumdistance:[61,4],maximumdistancegain:[61,5],referencedistanceratio:[61,6],panspreadangle:[61,7],rollangle:[61,8]},writable:!1,enumerable:!0,configurable:!1},MIDI_CONTROL_CHANGE_MESSAGES:{value:{bankselectcoarse:0,modulationwheelcoarse:1,breathcontrollercoarse:2,footcontrollercoarse:4,portamentotimecoarse:5,dataentrycoarse:6,volumecoarse:7,balancecoarse:8,pancoarse:10,expressioncoarse:11,effectcontrol1coarse:12,effectcontrol2coarse:13,generalpurposeslider1:16,generalpurposeslider2:17,generalpurposeslider3:18,generalpurposeslider4:19,bankselectfine:32,modulationwheelfine:33,breathcontrollerfine:34,footcontrollerfine:36,portamentotimefine:37,dataentryfine:38,volumefine:39,balancefine:40,panfine:42,expressionfine:43,effectcontrol1fine:44,effectcontrol2fine:45,holdpedal:64,portamento:65,sustenutopedal:66,softpedal:67,legatopedal:68,hold2pedal:69,soundvariation:70,resonance:71,soundreleasetime:72,soundattacktime:73,brightness:74,soundcontrol6:75,soundcontrol7:76,soundcontrol8:77,soundcontrol9:78,soundcontrol10:79,generalpurposebutton1:80,generalpurposebutton2:81,generalpurposebutton3:82,generalpurposebutton4:83,reverblevel:91,tremololevel:92,choruslevel:93,celestelevel:94,phaserlevel:95,databuttonincrement:96,databuttondecrement:97,nonregisteredparametercoarse:98,nonregisteredparameterfine:99,registeredparametercoarse:100,registeredparameterfine:101},writable:!1,enumerable:!0,configurable:!1},MIDI_NRPN_MESSAGES:{value:{entrymsb:6,entrylsb:38,increment:96,decrement:97,paramlsb:98,parammsb:99,nullactiveparameter:127},writable:!1,enumerable:!0,configurable:!1},MIDI_CHANNEL_MODE_MESSAGES:{value:{allsoundoff:120,resetallcontrollers:121,localcontrol:122,allnotesoff:123,omnimodeoff:124,omnimodeon:125,monomodeon:126,polymodeon:127},writable:!1,enumerable:!0,configurable:!1},octaveOffset:{value:0,writable:!0,enumerable:!0,configurable:!1}}),Object.defineProperties(this,{supported:{enumerable:!0,get:function(){return\"requestMIDIAccess\"in navigator}},enabled:{enumerable:!0,get:function(){return void 0!==this.interface}.bind(this)},inputs:{enumerable:!0,get:function(){return this._inputs}.bind(this)},outputs:{enumerable:!0,get:function(){return this._outputs}.bind(this)},sysexEnabled:{enumerable:!0,get:function(){return!(!this.interface||!this.interface.sysexEnabled)}.bind(this)},nrpnEventsEnabled:{enumerable:!0,get:function(){return!!this._nrpnEventsEnabled}.bind(this),set:function(enabled){return this._nrpnEventsEnabled=enabled,this._nrpnEventsEnabled}},nrpnTypes:{enumerable:!0,get:function(){return this._nrpnTypes}.bind(this)},time:{enumerable:!0,get:function(){return performance.now()}}})}var wm=new WebMidi;function Input(midiInput){var that=this;this._userHandlers={channel:{},system:{}},this._midiInput=midiInput,Object.defineProperties(this,{connection:{enumerable:!0,get:function(){return that._midiInput.connection}},id:{enumerable:!0,get:function(){return that._midiInput.id}},manufacturer:{enumerable:!0,get:function(){return that._midiInput.manufacturer}},name:{enumerable:!0,get:function(){return that._midiInput.name}},state:{enumerable:!0,get:function(){return that._midiInput.state}},type:{enumerable:!0,get:function(){return that._midiInput.type}}}),this._initializeUserHandlers(),this._midiInput.onmidimessage=this._onMidiMessage.bind(this)}function Output(midiOutput){var that=this;this._midiOutput=midiOutput,Object.defineProperties(this,{connection:{enumerable:!0,get:function(){return that._midiOutput.connection}},id:{enumerable:!0,get:function(){return that._midiOutput.id}},manufacturer:{enumerable:!0,get:function(){return that._midiOutput.manufacturer}},name:{enumerable:!0,get:function(){return that._midiOutput.name}},state:{enumerable:!0,get:function(){return that._midiOutput.state}},type:{enumerable:!0,get:function(){return that._midiOutput.type}}})}WebMidi.prototype.enable=function(callback,sysex){this.enabled||(this.supported?navigator.requestMIDIAccess({sysex:sysex}).then(function(midiAccess){var promiseTimeout,events=[],promises=[];this.interface=midiAccess,this._resetInterfaceUserHandlers(),this.interface.onstatechange=function(e){events.push(e)};for(var inputs=midiAccess.inputs.values(),input=inputs.next();input&&!input.done;input=inputs.next())promises.push(input.value.open());for(var outputs=midiAccess.outputs.values(),output=outputs.next();output&&!output.done;output=outputs.next())promises.push(output.value.open());function onPortsOpen(){clearTimeout(promiseTimeout),this._updateInputsAndOutputs(),this.interface.onstatechange=this._onInterfaceStateChange.bind(this),\"function\"==typeof callback&&callback.call(this),events.forEach(function(event){this._onInterfaceStateChange(event)}.bind(this))}promiseTimeout=setTimeout(onPortsOpen.bind(this),200),Promise&&Promise.all(promises).catch(function(err){}).then(onPortsOpen.bind(this))}.bind(this),function(err){\"function\"==typeof callback&&callback.call(this,err)}.bind(this)):\"function\"==typeof callback&&callback(new Error(\"The Web MIDI API is not supported by your browser.\")))},WebMidi.prototype.disable=function(){if(!this.supported)throw new Error(\"The Web MIDI API is not supported by your browser.\");this.interface&&(this.interface.onstatechange=void 0),this.interface=void 0,this._inputs=[],this._outputs=[],this._nrpnEventsEnabled=!0,this._resetInterfaceUserHandlers()},WebMidi.prototype.addListener=function(type,listener){if(!this.enabled)throw new Error(\"WebMidi must be enabled before adding event listeners.\");if(\"function\"!=typeof listener)throw new TypeError(\"The 'listener' parameter must be a function.\");if(!(0<=this._midiInterfaceEvents.indexOf(type)))throw new TypeError(\"The specified event type is not supported.\");return this._userHandlers[type].push(listener),this},WebMidi.prototype.hasListener=function(type,listener){if(!this.enabled)throw new Error(\"WebMidi must be enabled before checking event listeners.\");if(\"function\"!=typeof listener)throw new TypeError(\"The 'listener' parameter must be a function.\");if(!(0<=this._midiInterfaceEvents.indexOf(type)))throw new TypeError(\"The specified event type is not supported.\");for(var o=0;o<this._userHandlers[type].length;o++)if(this._userHandlers[type][o]===listener)return!0;return!1},WebMidi.prototype.removeListener=function(type,listener){if(!this.enabled)throw new Error(\"WebMidi must be enabled before removing event listeners.\");if(void 0!==listener&&\"function\"!=typeof listener)throw new TypeError(\"The 'listener' parameter must be a function.\");if(0<=this._midiInterfaceEvents.indexOf(type))if(listener)for(var o=0;o<this._userHandlers[type].length;o++)this._userHandlers[type][o]===listener&&this._userHandlers[type].splice(o,1);else this._userHandlers[type]=[];else{if(void 0!==type)throw new TypeError(\"The specified event type is not supported.\");this._resetInterfaceUserHandlers()}return this},WebMidi.prototype.toMIDIChannels=function(channel){var channels;if(\"all\"===channel||void 0===channel)channels=[\"all\"];else{if(\"none\"===channel)return channels=[];channels=Array.isArray(channel)?channel:[channel]}return-1<channels.indexOf(\"all\")&&(channels=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]),channels.map(function(ch){return parseInt(ch)}).filter(function(ch){return 1<=ch&&ch<=16})},WebMidi.prototype.getInputById=function(id){if(!this.enabled)throw new Error(\"WebMidi is not enabled.\");id=String(id);for(var i=0;i<this.inputs.length;i++)if(this.inputs[i].id===id)return this.inputs[i];return!1},WebMidi.prototype.getOutputById=function(id){if(!this.enabled)throw new Error(\"WebMidi is not enabled.\");id=String(id);for(var i=0;i<this.outputs.length;i++)if(this.outputs[i].id===id)return this.outputs[i];return!1},WebMidi.prototype.getInputByName=function(name){if(!this.enabled)throw new Error(\"WebMidi is not enabled.\");for(var i=0;i<this.inputs.length;i++)if(~this.inputs[i].name.indexOf(name))return this.inputs[i];return!1},WebMidi.prototype.getOctave=function(number){if(null!=number&&0<=number&&number<=127)return Math.floor(Math.floor(number)/12-1)+Math.floor(wm.octaveOffset)},WebMidi.prototype.getOutputByName=function(name){if(!this.enabled)throw new Error(\"WebMidi is not enabled.\");for(var i=0;i<this.outputs.length;i++)if(~this.outputs[i].name.indexOf(name))return this.outputs[i];return!1},WebMidi.prototype.guessNoteNumber=function(input){var output=!1;if(input&&input.toFixed&&0<=input&&input<=127?output=Math.round(input):0<=parseInt(input)&&parseInt(input)<=127?output=parseInt(input):(\"string\"==typeof input||input instanceof String)&&(output=this.noteNameToNumber(input)),!1===output)throw new Error(\"Invalid input value (\"+input+\").\");return output},WebMidi.prototype.noteNameToNumber=function(name){\"string\"!=typeof name&&(name=\"\");var matches=name.match(/([CDEFGAB])(#{0,2}|b{0,2})(-?\\d+)/i);if(!matches)throw new RangeError(\"Invalid note name.\");var semitones=wm._semitones[matches[1].toUpperCase()],result=12*(parseInt(matches[3])+1-Math.floor(wm.octaveOffset))+semitones;if(-1<matches[2].toLowerCase().indexOf(\"b\")?result-=matches[2].length:-1<matches[2].toLowerCase().indexOf(\"#\")&&(result+=matches[2].length),result<0||127<result)throw new RangeError(\"Invalid note name or note outside valid range.\");return result},WebMidi.prototype._updateInputsAndOutputs=function(){this._updateInputs(),this._updateOutputs()},WebMidi.prototype._updateInputs=function(){for(var i=0;i<this._inputs.length;i++){for(var remove=!0,updated=this.interface.inputs.values(),input=updated.next();input&&!input.done;input=updated.next())if(this._inputs[i]._midiInput===input.value){remove=!1;break}remove&&this._inputs.splice(i,1)}this.interface&&this.interface.inputs.forEach(function(nInput){for(var add=!0,j=0;j<this._inputs.length;j++)this._inputs[j]._midiInput===nInput&&(add=!1);add&&this._inputs.push(new Input(nInput))}.bind(this))},WebMidi.prototype._updateOutputs=function(){for(var i=0;i<this._outputs.length;i++){for(var remove=!0,updated=this.interface.outputs.values(),output=updated.next();output&&!output.done;output=updated.next())if(this._outputs[i]._midiOutput===output.value){remove=!1;break}remove&&this._outputs.splice(i,1)}this.interface&&this.interface.outputs.forEach(function(nOutput){for(var add=!0,j=0;j<this._outputs.length;j++)this._outputs[j]._midiOutput===nOutput&&(add=!1);add&&this._outputs.push(new Output(nOutput))}.bind(this))},WebMidi.prototype._onInterfaceStateChange=function(e){this._updateInputsAndOutputs();var event={timestamp:e.timeStamp,type:e.port.state};this.interface&&\"connected\"===e.port.state?\"output\"===e.port.type?event.port=this.getOutputById(e.port.id):\"input\"===e.port.type&&(event.port=this.getInputById(e.port.id)):event.port={connection:\"closed\",id:e.port.id,manufacturer:e.port.manufacturer,name:e.port.name,state:e.port.state,type:e.port.type},this._userHandlers[e.port.state].forEach(function(handler){handler(event)})},WebMidi.prototype._resetInterfaceUserHandlers=function(){for(var i=0;i<this._midiInterfaceEvents.length;i++)this._userHandlers[this._midiInterfaceEvents[i]]=[]},Input.prototype.on=Input.prototype.addListener=function(type,channel,listener){var that=this;if(void 0===channel&&(channel=\"all\"),Array.isArray(channel)||(channel=[channel]),channel.forEach(function(item){if(\"all\"!==item&&!(1<=item&&item<=16))throw new RangeError(\"The 'channel' parameter is invalid.\")}),\"function\"!=typeof listener)throw new TypeError(\"The 'listener' parameter must be a function.\");if(void 0!==wm.MIDI_SYSTEM_MESSAGES[type])this._userHandlers.system[type]||(this._userHandlers.system[type]=[]),this._userHandlers.system[type].push(listener);else{if(void 0===wm.MIDI_CHANNEL_MESSAGES[type])throw new TypeError(\"The specified event type is not supported.\");if(-1<channel.indexOf(\"all\")){channel=[];for(var j=1;j<=16;j++)channel.push(j)}this._userHandlers.channel[type]||(this._userHandlers.channel[type]=[]),channel.forEach(function(ch){that._userHandlers.channel[type][ch]||(that._userHandlers.channel[type][ch]=[]),that._userHandlers.channel[type][ch].push(listener)})}return this},Input.prototype.hasListener=function(type,channel,listener){var that=this;if(\"function\"!=typeof listener)throw new TypeError(\"The 'listener' parameter must be a function.\");if(void 0===channel&&(channel=\"all\"),channel.constructor!==Array&&(channel=[channel]),void 0!==wm.MIDI_SYSTEM_MESSAGES[type]){for(var o=0;o<this._userHandlers.system[type].length;o++)if(this._userHandlers.system[type][o]===listener)return!0}else if(void 0!==wm.MIDI_CHANNEL_MESSAGES[type]){if(-1<channel.indexOf(\"all\")){channel=[];for(var j=1;j<=16;j++)channel.push(j)}return!!this._userHandlers.channel[type]&&channel.every(function(chNum){var listeners=that._userHandlers.channel[type][chNum];return listeners&&-1<listeners.indexOf(listener)})}return!1},Input.prototype.removeListener=function(type,channel,listener){var that=this;if(void 0!==listener&&\"function\"!=typeof listener)throw new TypeError(\"The 'listener' parameter must be a function.\");if(void 0===channel&&(channel=\"all\"),channel.constructor!==Array&&(channel=[channel]),void 0!==wm.MIDI_SYSTEM_MESSAGES[type])if(void 0===listener)this._userHandlers.system[type]=[];else for(var o=0;o<this._userHandlers.system[type].length;o++)this._userHandlers.system[type][o]===listener&&this._userHandlers.system[type].splice(o,1);else if(void 0!==wm.MIDI_CHANNEL_MESSAGES[type]){if(-1<channel.indexOf(\"all\")){channel=[];for(var j=1;j<=16;j++)channel.push(j)}if(!this._userHandlers.channel[type])return this;channel.forEach(function(chNum){var listeners=that._userHandlers.channel[type][chNum];if(listeners)if(void 0===listener)that._userHandlers.channel[type][chNum]=[];else for(var l=0;l<listeners.length;l++)listeners[l]===listener&&listeners.splice(l,1)})}else{if(void 0!==type)throw new TypeError(\"The specified event type is not supported.\");this._initializeUserHandlers()}return this},Input.prototype._initializeUserHandlers=function(){for(var prop1 in wm.MIDI_CHANNEL_MESSAGES)wm.MIDI_CHANNEL_MESSAGES.hasOwnProperty(prop1)&&(this._userHandlers.channel[prop1]={});for(var prop2 in wm.MIDI_SYSTEM_MESSAGES)wm.MIDI_SYSTEM_MESSAGES.hasOwnProperty(prop2)&&(this._userHandlers.system[prop2]=[])},Input.prototype._onMidiMessage=function(e){if(0<this._userHandlers.system.midimessage.length){var event={target:this,data:e.data,timestamp:e.timeStamp,type:\"midimessage\"};this._userHandlers.system.midimessage.forEach(function(callback){callback(event)})}e.data[0]<240?(this._parseChannelEvent(e),this._parseNrpnEvent(e)):e.data[0]<=255&&this._parseSystemEvent(e)},Input.prototype._parseNrpnEvent=function(e){var data1,data2,command=e.data[0]>>4,channelBufferIndex=15&e.data[0],channel=1+channelBufferIndex;if(1<e.data.length&&(data1=e.data[1],data2=2<e.data.length?e.data[2]:void 0),wm.nrpnEventsEnabled&&command===wm.MIDI_CHANNEL_MESSAGES.controlchange&&(data1>=wm.MIDI_NRPN_MESSAGES.increment&&data1<=wm.MIDI_NRPN_MESSAGES.parammsb||data1===wm.MIDI_NRPN_MESSAGES.entrymsb||data1===wm.MIDI_NRPN_MESSAGES.entrylsb)){var ccEvent={target:this,type:\"controlchange\",data:e.data,timestamp:e.timeStamp,channel:channel,controller:{number:data1,name:this.getCcNameByNumber(data1)},value:data2};if(ccEvent.controller.number===wm.MIDI_NRPN_MESSAGES.parammsb&&ccEvent.value!=wm.MIDI_NRPN_MESSAGES.nullactiveparameter)wm._nrpnBuffer[channelBufferIndex]=[],wm._nrpnBuffer[channelBufferIndex][0]=ccEvent;else if(1===wm._nrpnBuffer[channelBufferIndex].length&&ccEvent.controller.number===wm.MIDI_NRPN_MESSAGES.paramlsb)wm._nrpnBuffer[channelBufferIndex].push(ccEvent);else if(2!==wm._nrpnBuffer[channelBufferIndex].length||ccEvent.controller.number!==wm.MIDI_NRPN_MESSAGES.increment&&ccEvent.controller.number!==wm.MIDI_NRPN_MESSAGES.decrement&&ccEvent.controller.number!==wm.MIDI_NRPN_MESSAGES.entrymsb)if(3===wm._nrpnBuffer[channelBufferIndex].length&&wm._nrpnBuffer[channelBufferIndex][2].number===wm.MIDI_NRPN_MESSAGES.entrymsb&&ccEvent.controller.number===wm.MIDI_NRPN_MESSAGES.entrylsb)wm._nrpnBuffer[channelBufferIndex].push(ccEvent);else if(3<=wm._nrpnBuffer[channelBufferIndex].length&&wm._nrpnBuffer[channelBufferIndex].length<=4&&ccEvent.controller.number===wm.MIDI_NRPN_MESSAGES.parammsb&&ccEvent.value===wm.MIDI_NRPN_MESSAGES.nullactiveparameter)wm._nrpnBuffer[channelBufferIndex].push(ccEvent);else if(4<=wm._nrpnBuffer[channelBufferIndex].length&&wm._nrpnBuffer[channelBufferIndex].length<=5&&ccEvent.controller.number===wm.MIDI_NRPN_MESSAGES.paramlsb&&ccEvent.value===wm.MIDI_NRPN_MESSAGES.nullactiveparameter){wm._nrpnBuffer[channelBufferIndex].push(ccEvent);var rawData=[];wm._nrpnBuffer[channelBufferIndex].forEach(function(ev){rawData.push(ev.data)});var nrpnNumber=wm._nrpnBuffer[channelBufferIndex][0].value<<7|wm._nrpnBuffer[channelBufferIndex][1].value,nrpnValue=wm._nrpnBuffer[channelBufferIndex][2].value;6===wm._nrpnBuffer[channelBufferIndex].length&&(nrpnValue=wm._nrpnBuffer[channelBufferIndex][2].value<<7|wm._nrpnBuffer[channelBufferIndex][3].value);var nrpnControllerType=\"\";switch(wm._nrpnBuffer[channelBufferIndex][2].controller.number){case wm.MIDI_NRPN_MESSAGES.entrymsb:nrpnControllerType=wm._nrpnTypes[0];break;case wm.MIDI_NRPN_MESSAGES.increment:nrpnControllerType=wm._nrpnTypes[1];break;case wm.MIDI_NRPN_MESSAGES.decrement:nrpnControllerType=wm._nrpnTypes[2];break;default:throw new Error(\"The NPRN type was unidentifiable.\")}var nrpnEvent={timestamp:ccEvent.timestamp,channel:ccEvent.channel,type:\"nrpn\",data:rawData,controller:{number:nrpnNumber,type:nrpnControllerType,name:\"Non-Registered Parameter \"+nrpnNumber},value:nrpnValue};wm._nrpnBuffer[channelBufferIndex]=[],this._userHandlers.channel[nrpnEvent.type]&&this._userHandlers.channel[nrpnEvent.type][nrpnEvent.channel]&&this._userHandlers.channel[nrpnEvent.type][nrpnEvent.channel].forEach(function(callback){callback(nrpnEvent)})}else wm._nrpnBuffer[channelBufferIndex]=[];else wm._nrpnBuffer[channelBufferIndex].push(ccEvent)}},Input.prototype._parseChannelEvent=function(e){var data1,data2,command=e.data[0]>>4,channel=1+(15&e.data[0]);1<e.data.length&&(data1=e.data[1],data2=2<e.data.length?e.data[2]:void 0);var event={target:this,data:e.data,timestamp:e.timeStamp,channel:channel};command===wm.MIDI_CHANNEL_MESSAGES.noteoff||command===wm.MIDI_CHANNEL_MESSAGES.noteon&&0===data2?(event.type=\"noteoff\",event.note={number:data1,name:wm._notes[data1%12],octave:wm.getOctave(data1)},event.velocity=data2/127,event.rawVelocity=data2):command===wm.MIDI_CHANNEL_MESSAGES.noteon?(event.type=\"noteon\",event.note={number:data1,name:wm._notes[data1%12],octave:wm.getOctave(data1)},event.velocity=data2/127,event.rawVelocity=data2):command===wm.MIDI_CHANNEL_MESSAGES.keyaftertouch?(event.type=\"keyaftertouch\",event.note={number:data1,name:wm._notes[data1%12],octave:wm.getOctave(data1)},event.value=data2/127):command===wm.MIDI_CHANNEL_MESSAGES.controlchange&&0<=data1&&data1<=119?(event.type=\"controlchange\",event.controller={number:data1,name:this.getCcNameByNumber(data1)},event.value=data2):command===wm.MIDI_CHANNEL_MESSAGES.channelmode&&120<=data1&&data1<=127?(event.type=\"channelmode\",event.controller={number:data1,name:this.getChannelModeByNumber(data1)},event.value=data2):command===wm.MIDI_CHANNEL_MESSAGES.programchange?(event.type=\"programchange\",event.value=data1):command===wm.MIDI_CHANNEL_MESSAGES.channelaftertouch?(event.type=\"channelaftertouch\",event.value=data1/127):command===wm.MIDI_CHANNEL_MESSAGES.pitchbend?(event.type=\"pitchbend\",event.value=((data2<<7)+data1-8192)/8192):event.type=\"unknownchannelmessage\",this._userHandlers.channel[event.type]&&this._userHandlers.channel[event.type][channel]&&this._userHandlers.channel[event.type][channel].forEach(function(callback){callback(event)})},Input.prototype.getCcNameByNumber=function(number){if(!(0<=(number=Math.floor(number))&&number<=119))throw new RangeError(\"The control change number must be between 0 and 119.\");for(var cc in wm.MIDI_CONTROL_CHANGE_MESSAGES)if(wm.MIDI_CONTROL_CHANGE_MESSAGES.hasOwnProperty(cc)&&number===wm.MIDI_CONTROL_CHANGE_MESSAGES[cc])return cc},Input.prototype.getChannelModeByNumber=function(number){if(!(120<=(number=Math.floor(number))&&status<=127))throw new RangeError(\"The control change number must be between 120 and 127.\");for(var cm in wm.MIDI_CHANNEL_MODE_MESSAGES)if(wm.MIDI_CHANNEL_MODE_MESSAGES.hasOwnProperty(cm)&&number===wm.MIDI_CHANNEL_MODE_MESSAGES[cm])return cm},Input.prototype._parseSystemEvent=function(e){var command=e.data[0],event={target:this,data:e.data,timestamp:e.timeStamp};command===wm.MIDI_SYSTEM_MESSAGES.sysex?event.type=\"sysex\":command===wm.MIDI_SYSTEM_MESSAGES.timecode?event.type=\"timecode\":command===wm.MIDI_SYSTEM_MESSAGES.songposition?event.type=\"songposition\":command===wm.MIDI_SYSTEM_MESSAGES.songselect?(event.type=\"songselect\",event.song=e.data[1]):command===wm.MIDI_SYSTEM_MESSAGES.tuningrequest?event.type=\"tuningrequest\":command===wm.MIDI_SYSTEM_MESSAGES.clock?event.type=\"clock\":command===wm.MIDI_SYSTEM_MESSAGES.start?event.type=\"start\":command===wm.MIDI_SYSTEM_MESSAGES.continue?event.type=\"continue\":command===wm.MIDI_SYSTEM_MESSAGES.stop?event.type=\"stop\":command===wm.MIDI_SYSTEM_MESSAGES.activesensing?event.type=\"activesensing\":command===wm.MIDI_SYSTEM_MESSAGES.reset?event.type=\"reset\":event.type=\"unknownsystemmessage\",this._userHandlers.system[event.type]&&this._userHandlers.system[event.type].forEach(function(callback){callback(event)})},Output.prototype.send=function(status,data,timestamp){if(!(128<=status&&status<=255))throw new RangeError(\"The status byte must be an integer between 128 (0x80) and 255 (0xFF).\");void 0===data&&(data=[]),Array.isArray(data)||(data=[data]);var message=[];return data.forEach(function(item){var parsed=Math.floor(item);if(!(0<=parsed&&parsed<=255))throw new RangeError(\"Data bytes must be integers between 0 (0x00) and 255 (0xFF).\");message.push(parsed)}),this._midiOutput.send([status].concat(message),parseFloat(timestamp)||0),this},Output.prototype.sendSysex=function(manufacturer,data,options){if(!wm.sysexEnabled)throw new Error(\"Sysex message support must first be activated.\");return options=options||{},manufacturer=[].concat(manufacturer),data.forEach(function(item){if(item<0||127<item)throw new RangeError(\"The data bytes of a sysex message must be integers between 0 (0x00) and 127 (0x7F).\")}),data=manufacturer.concat(data,wm.MIDI_SYSTEM_MESSAGES.sysexend),this.send(wm.MIDI_SYSTEM_MESSAGES.sysex,data,this._parseTimeParameter(options.time)),this},Output.prototype.sendTimecodeQuarterFrame=function(value,options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.timecode,value,this._parseTimeParameter(options.time)),this},Output.prototype.sendSongPosition=function(value,options){options=options||{};var msb=(value=Math.floor(value)||0)>>7&127,lsb=127&value;return this.send(wm.MIDI_SYSTEM_MESSAGES.songposition,[msb,lsb],this._parseTimeParameter(options.time)),this},Output.prototype.sendSongSelect=function(value,options){if(options=options||{},!(0<=(value=Math.floor(value))&&value<=127))throw new RangeError(\"The song number must be between 0 and 127.\");return this.send(wm.MIDI_SYSTEM_MESSAGES.songselect,[value],this._parseTimeParameter(options.time)),this},Output.prototype.sendTuningRequest=function(options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.tuningrequest,void 0,this._parseTimeParameter(options.time)),this},Output.prototype.sendClock=function(options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.clock,void 0,this._parseTimeParameter(options.time)),this},Output.prototype.sendStart=function(options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.start,void 0,this._parseTimeParameter(options.time)),this},Output.prototype.sendContinue=function(options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.continue,void 0,this._parseTimeParameter(options.time)),this},Output.prototype.sendStop=function(options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.stop,void 0,this._parseTimeParameter(options.time)),this},Output.prototype.sendActiveSensing=function(options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.activesensing,[],this._parseTimeParameter(options.time)),this},Output.prototype.sendReset=function(options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.reset,void 0,this._parseTimeParameter(options.time)),this},Output.prototype.stopNote=function(note,channel,options){if(\"all\"===note)return this.sendChannelMode(\"allnotesoff\",0,channel,options);var nVelocity=64;return(options=options||{}).rawVelocity?!isNaN(options.velocity)&&0<=options.velocity&&options.velocity<=127&&(nVelocity=options.velocity):!isNaN(options.velocity)&&0<=options.velocity&&options.velocity<=1&&(nVelocity=127*options.velocity),this._convertNoteToArray(note).forEach(function(item){wm.toMIDIChannels(channel).forEach(function(ch){this.send((wm.MIDI_CHANNEL_MESSAGES.noteoff<<4)+(ch-1),[item,Math.round(nVelocity)],this._parseTimeParameter(options.time))}.bind(this))}.bind(this)),this},Output.prototype.playNote=function(note,channel,options){var time,nVelocity=64;if((options=options||{}).rawVelocity?!isNaN(options.velocity)&&0<=options.velocity&&options.velocity<=127&&(nVelocity=options.velocity):!isNaN(options.velocity)&&0<=options.velocity&&options.velocity<=1&&(nVelocity=127*options.velocity),time=this._parseTimeParameter(options.time),this._convertNoteToArray(note).forEach(function(item){wm.toMIDIChannels(channel).forEach(function(ch){this.send((wm.MIDI_CHANNEL_MESSAGES.noteon<<4)+(ch-1),[item,Math.round(nVelocity)],time)}.bind(this))}.bind(this)),!isNaN(options.duration)){options.duration<=0&&(options.duration=0);var nRelease=64;options.rawVelocity?!isNaN(options.release)&&0<=options.release&&options.release<=127&&(nRelease=options.release):!isNaN(options.release)&&0<=options.release&&options.release<=1&&(nRelease=127*options.release),this._convertNoteToArray(note).forEach(function(item){wm.toMIDIChannels(channel).forEach(function(ch){this.send((wm.MIDI_CHANNEL_MESSAGES.noteoff<<4)+(ch-1),[item,Math.round(nRelease)],(time||wm.time)+options.duration)}.bind(this))}.bind(this))}return this},Output.prototype.sendKeyAftertouch=function(note,channel,pressure,options){var that=this;if(options=options||{},channel<1||16<channel)throw new RangeError(\"The channel must be between 1 and 16.\");(isNaN(pressure)||pressure<0||1<pressure)&&(pressure=.5);var nPressure=Math.round(127*pressure);return this._convertNoteToArray(note).forEach(function(item){wm.toMIDIChannels(channel).forEach(function(ch){that.send((wm.MIDI_CHANNEL_MESSAGES.keyaftertouch<<4)+(ch-1),[item,nPressure],that._parseTimeParameter(options.time))})}),this},Output.prototype.sendControlChange=function(controller,value,channel,options){if(options=options||{},\"string\"==typeof controller){if(void 0===(controller=wm.MIDI_CONTROL_CHANGE_MESSAGES[controller]))throw new TypeError(\"Invalid controller name.\")}else if(!(0<=(controller=Math.floor(controller))&&controller<=119))throw new RangeError(\"Controller numbers must be between 0 and 119.\");if(!(0<=(value=Math.floor(value)||0)&&value<=127))throw new RangeError(\"Controller value must be between 0 and 127.\");return wm.toMIDIChannels(channel).forEach(function(ch){this.send((wm.MIDI_CHANNEL_MESSAGES.controlchange<<4)+(ch-1),[controller,value],this._parseTimeParameter(options.time))}.bind(this)),this},Output.prototype._selectRegisteredParameter=function(parameter,channel,time){var that=this;if(parameter[0]=Math.floor(parameter[0]),!(0<=parameter[0]&&parameter[0]<=127))throw new RangeError(\"The control65 value must be between 0 and 127\");if(parameter[1]=Math.floor(parameter[1]),!(0<=parameter[1]&&parameter[1]<=127))throw new RangeError(\"The control64 value must be between 0 and 127\");return wm.toMIDIChannels(channel).forEach(function(){that.sendControlChange(101,parameter[0],channel,{time:time}),that.sendControlChange(100,parameter[1],channel,{time:time})}),this},Output.prototype._selectNonRegisteredParameter=function(parameter,channel,time){var that=this;if(parameter[0]=Math.floor(parameter[0]),!(0<=parameter[0]&&parameter[0]<=127))throw new RangeError(\"The control63 value must be between 0 and 127\");if(parameter[1]=Math.floor(parameter[1]),!(0<=parameter[1]&&parameter[1]<=127))throw new RangeError(\"The control62 value must be between 0 and 127\");return wm.toMIDIChannels(channel).forEach(function(){that.sendControlChange(99,parameter[0],channel,{time:time}),that.sendControlChange(98,parameter[1],channel,{time:time})}),this},Output.prototype._setCurrentRegisteredParameter=function(data,channel,time){var that=this;if((data=[].concat(data))[0]=Math.floor(data[0]),!(0<=data[0]&&data[0]<=127))throw new RangeError(\"The msb value must be between 0 and 127\");return wm.toMIDIChannels(channel).forEach(function(){that.sendControlChange(6,data[0],channel,{time:time})}),data[1]=Math.floor(data[1]),0<=data[1]&&data[1]<=127&&wm.toMIDIChannels(channel).forEach(function(){that.sendControlChange(38,data[1],channel,{time:time})}),this},Output.prototype._deselectRegisteredParameter=function(channel,time){var that=this;return wm.toMIDIChannels(channel).forEach(function(){that.sendControlChange(101,127,channel,{time:time}),that.sendControlChange(100,127,channel,{time:time})}),this},Output.prototype.setRegisteredParameter=function(parameter,data,channel,options){var that=this;if(options=options||{},!Array.isArray(parameter)){if(!wm.MIDI_REGISTERED_PARAMETER[parameter])throw new Error(\"The specified parameter is not available.\");parameter=wm.MIDI_REGISTERED_PARAMETER[parameter]}return wm.toMIDIChannels(channel).forEach(function(){that._selectRegisteredParameter(parameter,channel,options.time),that._setCurrentRegisteredParameter(data,channel,options.time),that._deselectRegisteredParameter(channel,options.time)}),this},Output.prototype.setNonRegisteredParameter=function(parameter,data,channel,options){var that=this;if(options=options||{},!(0<=parameter[0]&&parameter[0]<=127&&0<=parameter[1]&&parameter[1]<=127))throw new Error(\"Position 0 and 1 of the 2-position parameter array must both be between 0 and 127.\");return data=[].concat(data),wm.toMIDIChannels(channel).forEach(function(){that._selectNonRegisteredParameter(parameter,channel,options.time),that._setCurrentRegisteredParameter(data,channel,options.time),that._deselectRegisteredParameter(channel,options.time)}),this},Output.prototype.incrementRegisteredParameter=function(parameter,channel,options){var that=this;if(options=options||{},!Array.isArray(parameter)){if(!wm.MIDI_REGISTERED_PARAMETER[parameter])throw new Error(\"The specified parameter is not available.\");parameter=wm.MIDI_REGISTERED_PARAMETER[parameter]}return wm.toMIDIChannels(channel).forEach(function(){that._selectRegisteredParameter(parameter,channel,options.time),that.sendControlChange(96,0,channel,{time:options.time}),that._deselectRegisteredParameter(channel,options.time)}),this},Output.prototype.decrementRegisteredParameter=function(parameter,channel,options){if(options=options||{},!Array.isArray(parameter)){if(!wm.MIDI_REGISTERED_PARAMETER[parameter])throw new TypeError(\"The specified parameter is not available.\");parameter=wm.MIDI_REGISTERED_PARAMETER[parameter]}return wm.toMIDIChannels(channel).forEach(function(){this._selectRegisteredParameter(parameter,channel,options.time),this.sendControlChange(97,0,channel,{time:options.time}),this._deselectRegisteredParameter(channel,options.time)}.bind(this)),this},Output.prototype.setPitchBendRange=function(semitones,cents,channel,options){var that=this;if(options=options||{},!(0<=(semitones=Math.floor(semitones)||0)&&semitones<=127))throw new RangeError(\"The semitones value must be between 0 and 127\");if(!(0<=(cents=Math.floor(cents)||0)&&cents<=127))throw new RangeError(\"The cents value must be between 0 and 127\");return wm.toMIDIChannels(channel).forEach(function(){that.setRegisteredParameter(\"pitchbendrange\",[semitones,cents],channel,{time:options.time})}),this},Output.prototype.setModulationRange=function(semitones,cents,channel,options){var that=this;if(options=options||{},!(0<=(semitones=Math.floor(semitones)||0)&&semitones<=127))throw new RangeError(\"The semitones value must be between 0 and 127\");if(!(0<=(cents=Math.floor(cents)||0)&&cents<=127))throw new RangeError(\"The cents value must be between 0 and 127\");return wm.toMIDIChannels(channel).forEach(function(){that.setRegisteredParameter(\"modulationrange\",[semitones,cents],channel,{time:options.time})}),this},Output.prototype.setMasterTuning=function(value,channel,options){var that=this;if(options=options||{},(value=parseFloat(value)||0)<=-65||64<=value)throw new RangeError(\"The value must be a decimal number larger than -65 and smaller than 64.\");var coarse=Math.floor(value)+64,fine=value-Math.floor(value),msb=(fine=Math.round((fine+1)/2*16383))>>7&127,lsb=127&fine;return wm.toMIDIChannels(channel).forEach(function(){that.setRegisteredParameter(\"channelcoarsetuning\",coarse,channel,{time:options.time}),that.setRegisteredParameter(\"channelfinetuning\",[msb,lsb],channel,{time:options.time})}),this},Output.prototype.setTuningProgram=function(value,channel,options){var that=this;if(options=options||{},!(0<=(value=Math.floor(value))&&value<=127))throw new RangeError(\"The program value must be between 0 and 127\");return wm.toMIDIChannels(channel).forEach(function(){that.setRegisteredParameter(\"tuningprogram\",value,channel,{time:options.time})}),this},Output.prototype.setTuningBank=function(value,channel,options){var that=this;if(options=options||{},!(0<=(value=Math.floor(value)||0)&&value<=127))throw new RangeError(\"The bank value must be between 0 and 127\");return wm.toMIDIChannels(channel).forEach(function(){that.setRegisteredParameter(\"tuningbank\",value,channel,{time:options.time})}),this},Output.prototype.sendChannelMode=function(command,value,channel,options){if(options=options||{},\"string\"==typeof command){if(!(command=wm.MIDI_CHANNEL_MODE_MESSAGES[command]))throw new TypeError(\"Invalid channel mode message name.\")}else if(!(120<=(command=Math.floor(command))&&command<=127))throw new RangeError(\"Channel mode numerical identifiers must be between 120 and 127.\");if((value=Math.floor(value)||0)<0||127<value)throw new RangeError(\"Value must be an integer between 0 and 127.\");return wm.toMIDIChannels(channel).forEach(function(ch){this.send((wm.MIDI_CHANNEL_MESSAGES.channelmode<<4)+(ch-1),[command,value],this._parseTimeParameter(options.time))}.bind(this)),this},Output.prototype.sendProgramChange=function(program,channel,options){var that=this;if(options=options||{},program=Math.floor(program),isNaN(program)||program<0||127<program)throw new RangeError(\"Program numbers must be between 0 and 127.\");return wm.toMIDIChannels(channel).forEach(function(ch){that.send((wm.MIDI_CHANNEL_MESSAGES.programchange<<4)+(ch-1),[program],that._parseTimeParameter(options.time))}),this},Output.prototype.sendChannelAftertouch=function(pressure,channel,options){var that=this;options=options||{},pressure=parseFloat(pressure),(isNaN(pressure)||pressure<0||1<pressure)&&(pressure=.5);var nPressure=Math.round(127*pressure);return wm.toMIDIChannels(channel).forEach(function(ch){that.send((wm.MIDI_CHANNEL_MESSAGES.channelaftertouch<<4)+(ch-1),[nPressure],that._parseTimeParameter(options.time))}),this},Output.prototype.sendPitchBend=function(bend,channel,options){var that=this;if(options=options||{},isNaN(bend)||bend<-1||1<bend)throw new RangeError(\"Pitch bend value must be between -1 and 1.\");var nLevel=Math.round((bend+1)/2*16383),msb=nLevel>>7&127,lsb=127&nLevel;return wm.toMIDIChannels(channel).forEach(function(ch){that.send((wm.MIDI_CHANNEL_MESSAGES.pitchbend<<4)+(ch-1),[lsb,msb],that._parseTimeParameter(options.time))}),this},Output.prototype._parseTimeParameter=function(time){var value,parsed=parseFloat(time);return\"string\"==typeof time&&\"+\"===time.substring(0,1)?parsed&&0<parsed&&(value=wm.time+parsed):parsed>wm.time&&(value=parsed),value},Output.prototype._convertNoteToArray=function(note){var notes=[];return Array.isArray(note)||(note=[note]),note.forEach(function(item){notes.push(wm.guessNoteNumber(item))}),notes}, true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return wm}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):undefined}(this);\n\n//# sourceURL=webpack://MidiPlex/./node_modules/webmidi/webmidi.min.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack://MidiPlex/(webpack)/buildin/global.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack://MidiPlex/(webpack)/buildin/module.js?");

/***/ }),

/***/ "./src/clock/clock-sync.ts":
/*!*********************************!*\
  !*** ./src/clock/clock-sync.ts ***!
  \*********************************/
/*! exports provided: ClockSync */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClockSync\", function() { return ClockSync; });\n/* harmony import */ var _util_event_emitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/event-emitter */ \"./src/util/event-emitter.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\nvar ClockSyncEvents = {\n  q32: \"1/32\",\n  q16: \"1/16\",\n  q8: \"1/8\",\n  q4: \"1/4\",\n  q2: \"1/2\",\n  q1: \"1/1\"\n};\n\nvar ClockSync = /*#__PURE__*/function () {\n  //Timing variables\n  //Number frames per quarter note\n  function ClockSync(webmidi, portId) {\n    _classCallCheck(this, ClockSync);\n\n    this.webmidi = webmidi;\n    this.events = new _util_event_emitter__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    this.resolution = 24;\n    this.frames = 0;\n    this.milliseconds = 0;\n    this.seconds = 0;\n    this.minutes = 0;\n    this.q64 = 0;\n    this.q32 = 0;\n    this.q16 = 0;\n    this.q8 = 0;\n    this.q4 = 0;\n    this.q2 = 0;\n    this.q1 = 0;\n    this.portId = portId;\n\n    if (this.portId != undefined) {\n      this.fromPort(portId);\n    }\n\n    this._start = this._start.bind(this);\n    this._stop = this._stop.bind(this);\n    this._clock = this._clock.bind(this);\n  }\n  /**\r\n   * Add a listener for a specific clock event\r\n   * \r\n   * @param event\r\n   * @param callback \r\n   */\n\n\n  _createClass(ClockSync, [{\n    key: \"on\",\n    value: function on(event, callback) {\n      this.events.on(event, callback);\n    }\n  }, {\n    key: \"_start\",\n    value: function _start() {\n      this.events.emit(\"start\", {\n        type: \"start\"\n      });\n    }\n  }, {\n    key: \"_stop\",\n    value: function _stop() {\n      this.frames = 0;\n      this.milliseconds = 0;\n      this.seconds = 0;\n      this.minutes = 0;\n      this.q64 = 0;\n      this.q32 = 0;\n      this.q16 = 0;\n      this.q8 = 0;\n      this.q4 = 0;\n      this.q1 = 0;\n      this.events.emit(\"stop\", {\n        type: \"stop\"\n      });\n    }\n  }, {\n    key: \"_clock\",\n    value: function _clock() {\n      /**\r\n       * Increment our beats based on the current frame. By default there are 24 frames per quarter note.\r\n       */\n      this.frames = this.frames + 1;\n      this.q32 = this.frames % (this.resolution / 8) === 0 ? this._increment(\"q32\") : this.q32;\n      this.q16 = this.frames % (this.resolution / 4) === 0 ? this._increment(\"q16\") : this.q16;\n      this.q8 = this.frames % (this.resolution / 2) === 0 ? this._increment(\"q8\") : this.q8;\n      this.q4 = this.frames % this.resolution === 0 ? this._increment(\"q4\") : this.q4;\n      this.q2 = this.frames % (this.resolution * 2) === 0 ? this._increment(\"q2\") : this.q2;\n      this.q1 = this.frames % (this.resolution * 4) === 0 ? this._increment(\"q1\") : this.q1;\n      /**\r\n       * TODO: Trigger the event for this exact bar\r\n       */\n      // let barString = .padStart(5, \"0\")\n      // this.events.emit(\"00001.01.01.01\")\n    }\n  }, {\n    key: \"_increment\",\n    value: function _increment(beat) {\n      this.events.emit(ClockSyncEvents[beat], {\n        type: \"tick\"\n      });\n      return this[beat] + 1;\n    }\n    /**\r\n     * Set the input port id from which the clock events will originate\r\n     * \r\n     * @param portId - an input port\r\n     */\n\n  }, {\n    key: \"fromPort\",\n    value: function fromPort(portId) {\n      this.portId = portId;\n\n      if (this.portInstance) {\n        this.portInstance = null;\n        this.portInstance.removeListener(\"start\", \"all\", this._start);\n        this.portInstance.removeListener(\"stop\", \"all\", this._stop);\n        this.portInstance.removeListener(\"clock\", \"all\", this._clock);\n      }\n\n      this.portInstance = this.webmidi.getInputById(portId);\n\n      if (this.portInstance) {\n        this.portInstance.addListener(\"start\", \"all\", this._start);\n        this.portInstance.addListener(\"stop\", \"all\", this._stop);\n        this.portInstance.addListener(\"clock\", \"all\", this._clock);\n        return true;\n      }\n\n      return false;\n    }\n  }]);\n\n  return ClockSync;\n}();\n\n\n\n//# sourceURL=webpack://MidiPlex/./src/clock/clock-sync.ts?");

/***/ }),

/***/ "./src/config/input-event-types.ts":
/*!*****************************************!*\
  !*** ./src/config/input-event-types.ts ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ([\"activesensing\", \"channelaftertouch\", \"channelmode\", \"clock\", \"continue\", \"controlchange\", \"keyaftertouch\", //\"midimessage\",\n\"noteoff\", \"noteon\", \"nrpn\", \"pitchbend\", \"programchange\", \"reset\", \"songposition\", \"songselect\", \"start\", \"stop\", \"sysex\", \"timecode\", \"tuningrequest\", \"unknownsystemmessage\"]);\n\n//# sourceURL=webpack://MidiPlex/./src/config/input-event-types.ts?");

/***/ }),

/***/ "./src/config/quantize.ts":
/*!********************************!*\
  !*** ./src/config/quantize.ts ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar Quantize;\n\n(function (Quantize) {\n  Quantize[Quantize[\"1/1\"] = 0] = \"1/1\";\n  Quantize[Quantize[\"1/2\"] = 1] = \"1/2\";\n  Quantize[Quantize[\"1/4\"] = 2] = \"1/4\";\n  Quantize[Quantize[\"1/8\"] = 3] = \"1/8\";\n  Quantize[Quantize[\"1/16\"] = 4] = \"1/16\";\n  Quantize[Quantize[\"1/32\"] = 5] = \"1/32\";\n})(Quantize || (Quantize = {}));\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Quantize);\n\n//# sourceURL=webpack://MidiPlex/./src/config/quantize.ts?");

/***/ }),

/***/ "./src/definitions/clock-test-node.ts":
/*!********************************************!*\
  !*** ./src/definitions/clock-test-node.ts ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar CLOCK_TEST_NODE = {\n  name: \"CLOCK_TEST_NODE\",\n  description: \"Test node for the internal clock sync.\",\n  baseType: \"filter\",\n  properties: {\n    number: {\n      type: 'number',\n      value: 45,\n      min: 0,\n      max: 100\n    },\n    bool: {\n      type: 'boolean',\n      value: true\n    },\n    list: {\n      type: 'list',\n      items: {\n        type: \"number\",\n        min: 100,\n        max: 50\n      },\n      value: [1, 2, 3, 4]\n    }\n  },\n  state: {\n    first: true\n  },\n  inputEdges: [{\n    name: \"in\",\n    receives: [\"all\"]\n  }],\n  outputEdges: [{\n    name: \"out\",\n    sends: [\"all\"]\n  }],\n  quantize: \"1/16\",\n  tick: function tick() {\n    var _this = this;\n\n    console.log(this.quantize());\n    console.log(this.prop(\"list\"));\n\n    if (this.state.first) {\n      setTimeout(function () {\n        _this.prop(\"list\", [5, 6, 7, 8]);\n\n        _this.quantize(\"1/8\");\n      }, 3000);\n      this.state.first = false;\n    }\n\n    if (this.data.type === \"stop\") {\n      this.send(this.generator.noteoff(\"C4\"), \"out\");\n      return;\n    }\n\n    this.send(this.generator.noteon(\"C4\"), \"out\");\n    setTimeout(function () {\n      return _this.send(_this.generator.noteoff(\"C4\"), \"out\");\n    }, 10);\n  },\n  receive: function receive() {\n    /**\r\n     * Simple sends any received messges to the \"out\" edge\r\n     */\n    //params.send(params.message, \"out\");\n    //this.send(this.generator.noteon(\"C4\"), \"out\");\n    this.send(this.message, \"out\");\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (CLOCK_TEST_NODE);\n\n//# sourceURL=webpack://MidiPlex/./src/definitions/clock-test-node.ts?");

/***/ }),

/***/ "./src/definitions/definitions.ts":
/*!****************************************!*\
  !*** ./src/definitions/definitions.ts ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _input_device_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input-device-node */ \"./src/definitions/input-device-node.ts\");\n/* harmony import */ var _output_device_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./output-device-node */ \"./src/definitions/output-device-node.ts\");\n/* harmony import */ var _clock_test_node__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./clock-test-node */ \"./src/definitions/clock-test-node.ts\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  INPUT_DEVICE_NODE: _input_device_node__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  OUTPUT_DEVICE_NODE: _output_device_node__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  CLOCK_TEST_NODE: _clock_test_node__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n});\n\n//# sourceURL=webpack://MidiPlex/./src/definitions/definitions.ts?");

/***/ }),

/***/ "./src/definitions/input-device-node.ts":
/*!**********************************************!*\
  !*** ./src/definitions/input-device-node.ts ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar INPUT_DEVICE_NODE = {\n  name: \"INPUT_DEVICE_NODE\",\n  description: \"Receives input from external midi devices and sends all messages thru.\",\n  baseType: \"input\",\n  properties: {},\n  state: {},\n  inputEdges: [{\n    name: \"in\",\n    receives: [\"all\"]\n  }],\n  outputEdges: [{\n    name: \"out\",\n    sends: [\"all\"]\n  }],\n  quantize: false,\n  tick: function tick() {},\n  receive: function receive() {\n    /**\r\n     * Simple sends any received messges to the \"out\" edge\r\n     */\n    //params.send(params.message, \"out\");\n    this.send(this.message, \"out\");\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (INPUT_DEVICE_NODE);\n\n//# sourceURL=webpack://MidiPlex/./src/definitions/input-device-node.ts?");

/***/ }),

/***/ "./src/definitions/output-device-node.ts":
/*!***********************************************!*\
  !*** ./src/definitions/output-device-node.ts ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar OUTPUT_DEVICE_NODE = {\n  name: \"OUTPUT_DEVICE_NODE\",\n  description: \"Device endpoint, sends all messages thru to external device.\",\n  baseType: \"output\",\n  state: {},\n  properties: {},\n  outputEdges: [],\n  inputEdges: [{\n    name: \"in\",\n    receives: [\"all\"]\n  }],\n  quantize: false,\n  tick: function tick() {},\n  receive: function receive() {}\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (OUTPUT_DEVICE_NODE);\n\n//# sourceURL=webpack://MidiPlex/./src/definitions/output-device-node.ts?");

/***/ }),

/***/ "./src/device/device-manager.ts":
/*!**************************************!*\
  !*** ./src/device/device-manager.ts ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DeviceManager; });\n/* harmony import */ var _util_event_emitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/event-emitter */ \"./src/util/event-emitter.js\");\n/* harmony import */ var _midi_device__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./midi-device */ \"./src/device/midi-device.ts\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar DeviceManager = /*#__PURE__*/function () {\n  function DeviceManager(WebMidi) {\n    var _this = this;\n\n    var devices = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    _classCallCheck(this, DeviceManager);\n\n    this.events = new _util_event_emitter__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    this.webmidi = WebMidi;\n    this.initialDeviceConfigs = devices;\n    this.devices = new Map();\n    /**\r\n     * Add our devices to our device map so we can easily reference them\r\n     */\n\n    devices.forEach(function (deviceOptions) {\n      _this.devices.set(deviceOptions.id, new _midi_device__WEBPACK_IMPORTED_MODULE_1__[\"default\"](_this.webmidi, deviceOptions));\n    });\n    this.webmidi.addListener('connected', this.handlePortsConnected.bind(this));\n    this.webmidi.addListener('disconnected', this.handlePortsDisconnected.bind(this));\n  }\n  /**\r\n   * Shorthand wrapper function for this.events.on()\r\n   * \r\n   * @param event \r\n   * @param listener \r\n   */\n\n\n  _createClass(DeviceManager, [{\n    key: \"on\",\n    value: function on(event, listener) {\n      this.events.on(event, listener);\n    }\n  }, {\n    key: \"addDevice\",\n    value: function addDevice(options) {\n      var deviceOptions = Object.assign({}, options); //Do not allow overwriting devices\n\n      if (this.devices.has(deviceOptions.id)) {\n        console.warn(\"DeviceManager: Attempted to add a device with an id that is already in use.\");\n        return false;\n      } //Check if the provided input or output ports are already being used\n\n\n      if (this.portInUse(deviceOptions.webmidi.inputId)) {\n        deviceOptions.webmidi.inputId = null;\n        console.warn(\"DeviceManager: Attempted to add a device w/ an input port that is already being used - input port set to null.\");\n      }\n\n      if (this.portInUse(deviceOptions.webmidi.outputId)) {\n        deviceOptions.webmidi.outputId = null;\n        console.warn(\"DeviceManager: Attempted to add a device w/ an output port that is already being used - output port set to null.\");\n      }\n\n      var newDevice = new _midi_device__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.webmidi, deviceOptions);\n      this.devices.set(deviceOptions.id, newDevice);\n      this.events.emit(\"deviceAdded\");\n      return newDevice;\n    }\n  }, {\n    key: \"removeDevice\",\n    value: function removeDevice(deviceId) {\n      var device = this.devices.get(deviceId);\n      if (!device) return false;\n      device.cleanup();\n      this.devices[\"delete\"](deviceId);\n      this.events.emit(\"deviceRemoved\", deviceId);\n    }\n  }, {\n    key: \"handlePortsConnected\",\n    value: function handlePortsConnected() {\n      this.events.emit(\"portsConnected\", {\n        inputs: this.webmidi.inputs,\n        outputs: this.webmidi.outputs\n      });\n    }\n  }, {\n    key: \"handlePortsDisconnected\",\n    value: function handlePortsDisconnected() {\n      this.events.emit(\"portsDisconnected\", {\n        inputs: this.webmidi.inputs,\n        outputs: this.webmidi.outputs\n      });\n    }\n  }, {\n    key: \"portInUse\",\n    value: function portInUse(portId) {\n      var inUse = false;\n      this.devices.forEach(function (device) {\n        if (device.portInUse(portId)) inUse = true;\n      });\n      return inUse;\n    }\n  }, {\n    key: \"getDeviceStatus\",\n    value: function getDeviceStatus(deviceId) {\n      var device = this.devices.get(deviceId);\n      if (!device) return false;\n      return {\n        input: device.inputStatus,\n        output: device.outputStatus\n      };\n    }\n    /**\r\n     * Returns the given MidiDevice instance \r\n     * \r\n     * @param deviceId - The device's id string\r\n     */\n\n  }, {\n    key: \"getDevice\",\n    value: function getDevice(deviceId) {\n      return this.devices.get(deviceId);\n    }\n    /**\r\n     * Wrapper for given devices addInputEvent() function. Same result can be acheived by\r\n     * called getDevice(<deviceId>).addInputEvent(<DeviceEvent>).\r\n     * \r\n     * @param deviceId \r\n     * @param inputEvent \r\n     */\n\n  }, {\n    key: \"addInputEvent\",\n    value: function addInputEvent(deviceId, inputEvent) {\n      var device = this.devices.get(deviceId);\n      if (!device) return false;\n      return device.addInputEvent(inputEvent);\n    }\n  }, {\n    key: \"removeInputEvent\",\n    value: function removeInputEvent(deviceId, eventId) {\n      var device = this.devices.get(deviceId);\n      if (!device) return false;\n      return device.removeInputEvent(eventId);\n    }\n  }, {\n    key: \"pollOutputPort\",\n    value: function pollOutputPort(portId, note) {\n      var outputPort = this.webmidi.getOutputById(portId);\n      if (!outputPort) return false;\n      outputPort.playNote(note || \"C3\");\n      return true;\n    }\n    /**\r\n     * Send a message to the output of the device w/ the given ID. Returns false if the\r\n     * device does not exist, the message type is unrecognized, or if the device does not\r\n     * have a resolved output port instance.\r\n     * \r\n     * @param deviceId - The id of the device to send the message\r\n     * @param message - An instance of MidiMessage\r\n     * @param options - WebMidi options (???)\r\n     */\n\n  }, {\n    key: \"send\",\n    value: function send(deviceId, message, options) {\n      var device = this.devices.get(deviceId);\n      if (!device) return false;\n      return device.send(message, options);\n    }\n  }]);\n\n  return DeviceManager;\n}();\n\n\n\n//# sourceURL=webpack://MidiPlex/./src/device/device-manager.ts?");

/***/ }),

/***/ "./src/device/device-model.ts":
/*!************************************!*\
  !*** ./src/device/device-model.ts ***!
  \************************************/
/*! exports provided: DeviceStatus */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DeviceStatus\", function() { return DeviceStatus; });\nvar DeviceStatus;\n\n(function (DeviceStatus) {\n  DeviceStatus[DeviceStatus[\"CONNECTED\"] = 0] = \"CONNECTED\";\n  DeviceStatus[DeviceStatus[\"DISCONNECTED\"] = 1] = \"DISCONNECTED\";\n})(DeviceStatus || (DeviceStatus = {}));\n\n\n\n//# sourceURL=webpack://MidiPlex/./src/device/device-model.ts?");

/***/ }),

/***/ "./src/device/input-device.ts":
/*!************************************!*\
  !*** ./src/device/input-device.ts ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _device_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./device-model */ \"./src/device/device-model.ts\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar InputDevice = /*#__PURE__*/function () {\n  //Input Device\n  //WebMidi\n  function InputDevice(webmidi, portId) {\n    _classCallCheck(this, InputDevice);\n\n    this.status = _device_model__WEBPACK_IMPORTED_MODULE_0__[\"DeviceStatus\"].DISCONNECTED;\n    this.webmidi = webmidi;\n    this.portEvents = new Map();\n    this.portId = portId;\n    this.setPort(portId); //Call cleanup() to remove these listeners\n\n    this.webmidi.addListener('connected', this.rebindPort.bind(this));\n    this.webmidi.addListener('disconnected', this.rebindPort.bind(this));\n  }\n  /**\r\n   * Called when WebMidi emits a 'connected' or 'disconnected' event to update\r\n   * the status of this devices port.\r\n   */\n\n\n  _createClass(InputDevice, [{\n    key: \"rebindPort\",\n    value: function rebindPort() {\n      this.setPort(this.portId);\n    }\n  }, {\n    key: \"setPort\",\n    value: function setPort(portId) {\n      //Clear input events on current port\n      this.clearPortEvents(); //Attempt to fetch our port instance\n\n      this.portId = portId;\n      this.portInstance = this.webmidi.getInputById(this.portId);\n      this.status = this.portInstance ? _device_model__WEBPACK_IMPORTED_MODULE_0__[\"DeviceStatus\"].CONNECTED : _device_model__WEBPACK_IMPORTED_MODULE_0__[\"DeviceStatus\"].DISCONNECTED; //Add input events to new port and emit port change event\n\n      this.bindPortEvents();\n    }\n  }, {\n    key: \"addEvent\",\n    value: function addEvent(portEvent) {\n      var _this = this;\n\n      if (!portEvent.id || this.portEvents.has(portEvent.id)) return false;\n      /**\r\n       * Add the event to our portEvents regardless or whether we have a connected portInstance or not.\r\n       * These events will be used if our portInstance is resolved later.\r\n       */\n\n      this.portEvents.set(portEvent.id, portEvent); //If we do have a port instance, add our listeners\n\n      if (this.portInstance != null && this.portInstance != false) {\n        portEvent.events.forEach(function (event) {\n          _this.portInstance.addListener(event, 'all', portEvent.listener);\n        });\n      }\n\n      return portEvent.id; //Return the id by which this event can be removed later\n    }\n  }, {\n    key: \"removeEvent\",\n    value: function removeEvent(eventId) {\n      var _this2 = this;\n\n      var portEvent = this.portEvents.get(eventId);\n      if (!portEvent) return false; //If we do have a port instance, remove our listeners\n\n      if (this.portInstance != null && this.portInstance != false) {\n        portEvent.events.forEach(function (event) {\n          _this2.portInstance.removeListener(event, 'all', portEvent.listener);\n        });\n      }\n\n      return true; //Return true if the events existed and were removed\n    }\n  }, {\n    key: \"bindPortEvents\",\n    value: function bindPortEvents() {\n      var _this3 = this;\n\n      if (!this.portInstance) return false;\n      this.portEvents.forEach(function (portEvent) {\n        portEvent.events.forEach(function (event) {\n          _this3.portInstance.addListener(event, 'all', portEvent.listener);\n        });\n      });\n      return true;\n    }\n  }, {\n    key: \"clearPortEvents\",\n    value: function clearPortEvents() {\n      var _this4 = this;\n\n      if (!this.portInstance) return false;\n      this.portEvents.forEach(function (portEvent) {\n        portEvent.events.forEach(function (event) {\n          _this4.portInstance.removeListener(event, 'all', portEvent.listener);\n        });\n      });\n      return true;\n    }\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      this.clearPortEvents();\n      this.webmidi.removeListener('connected', this.rebindPort.bind(this));\n      this.webmidi.removeListener('disconnected', this.rebindPort.bind(this));\n    }\n  }]);\n\n  return InputDevice;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (InputDevice);\n\n//# sourceURL=webpack://MidiPlex/./src/device/input-device.ts?");

/***/ }),

/***/ "./src/device/midi-device.ts":
/*!***********************************!*\
  !*** ./src/device/midi-device.ts ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _input_device__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input-device */ \"./src/device/input-device.ts\");\n/* harmony import */ var _output_device__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./output-device */ \"./src/device/output-device.ts\");\n/* harmony import */ var _util_event_emitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/event-emitter */ \"./src/util/event-emitter.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\nvar MidiDevice = /*#__PURE__*/function () {\n  function MidiDevice(webmidi, options) {\n    _classCallCheck(this, MidiDevice);\n\n    this.webmidi = webmidi;\n    this.id = options.id;\n    this.name = options.name;\n    this.events = new _util_event_emitter__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n    this.input = new _input_device__WEBPACK_IMPORTED_MODULE_0__[\"default\"](webmidi, options.webmidi.inputId);\n    this.output = new _output_device__WEBPACK_IMPORTED_MODULE_1__[\"default\"](webmidi, options.webmidi.outputId);\n  }\n\n  _createClass(MidiDevice, [{\n    key: \"portInUse\",\n    value: function portInUse(portId) {\n      return this.input.portId === portId || this.output.portId === portId;\n    }\n  }, {\n    key: \"addInputEvent\",\n    value: function addInputEvent(inputEvent) {\n      return this.input.addEvent(inputEvent);\n    }\n  }, {\n    key: \"removeInputEvent\",\n    value: function removeInputEvent(eventId) {\n      return this.input.removeEvent(eventId);\n    }\n  }, {\n    key: \"setInputPort\",\n    value: function setInputPort(portId) {\n      this.input.setPort(portId);\n      this.events.emit(\"portChange\", this);\n    }\n  }, {\n    key: \"setOutputPort\",\n    value: function setOutputPort(portId) {\n      this.output.setPort(portId);\n      this.events.emit(\"portChange\", this);\n    }\n  }, {\n    key: \"send\",\n    value: function send(message, options) {\n      return this.output.send(message, options);\n    }\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      this.input.cleanup();\n      this.output.cleanup();\n    }\n  }, {\n    key: \"inputStatus\",\n    get: function get() {\n      return this.input.status;\n    }\n  }, {\n    key: \"outputStatus\",\n    get: function get() {\n      return this.output.status;\n    }\n  }]);\n\n  return MidiDevice;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (MidiDevice);\n\n//# sourceURL=webpack://MidiPlex/./src/device/midi-device.ts?");

/***/ }),

/***/ "./src/device/output-device.ts":
/*!*************************************!*\
  !*** ./src/device/output-device.ts ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _device_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./device-model */ \"./src/device/device-model.ts\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar OutputDevice = /*#__PURE__*/function () {\n  //Input Device\n  //WebMidi\n  function OutputDevice(webmidi, portId) {\n    _classCallCheck(this, OutputDevice);\n\n    this.status = _device_model__WEBPACK_IMPORTED_MODULE_0__[\"DeviceStatus\"].DISCONNECTED;\n    this.webmidi = webmidi;\n    this.portId = portId;\n    this.setPort(portId); //Call cleanup() to remove these listeners\n\n    this.webmidi.addListener('connected', this.rebindPort.bind(this));\n    this.webmidi.addListener('disconnected', this.rebindPort.bind(this));\n  }\n\n  _createClass(OutputDevice, [{\n    key: \"setPort\",\n    value: function setPort(portId) {\n      this.portId = portId;\n      this.portInstance = this.webmidi.getOutputById(this.portId);\n      this.status = this.portInstance ? _device_model__WEBPACK_IMPORTED_MODULE_0__[\"DeviceStatus\"].CONNECTED : _device_model__WEBPACK_IMPORTED_MODULE_0__[\"DeviceStatus\"].DISCONNECTED;\n    }\n    /**\r\n     * Returns true if the MidiMessage is able to be sent, returns false if this device has\r\n     * no resolved portInstance or \r\n     * \r\n     * @param message - a MidiMessage to send\r\n     */\n\n  }, {\n    key: \"send\",\n    value: function send(message, options) {\n      if (!_typeof(OutputDevice.messageBroker[message.type])) return false; //Unrecognized type\n\n      if (!this.portInstance) return false; //No resolved portInstance to send the message\n      //console.log(\"Sending to Output Port: \" + this.portId);\n\n      OutputDevice.messageBroker[message.type](this.portInstance, message, options);\n      return false;\n    }\n    /**\r\n     * Called when WebMidi emits a 'connected' or 'disconnected' event to update\r\n     * the status of this devices port.\r\n     */\n\n  }, {\n    key: \"rebindPort\",\n    value: function rebindPort() {\n      this.setPort(this.portId);\n    }\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      this.webmidi.removeListener('connected', this.rebindPort.bind(this));\n      this.webmidi.removeListener('disconnected', this.rebindPort.bind(this));\n    }\n  }]);\n\n  return OutputDevice;\n}();\n/**\r\n * The messageBroker functions determine how a particular message should be sent via\r\n * the given portInstance object (a WebMidiJS output)\r\n */\n\n\nOutputDevice.messageBroker = {\n  noteon: function noteon(portInstance, message, options) {\n    portInstance.playNote(message.note.number, message.channel, options);\n  },\n  noteoff: function noteoff(portInstance, message, options) {\n    portInstance.stopNote(message.note.number, message.channel, options);\n  },\n  controlchange: function controlchange(portInstance, message, options) {\n    //console.log(message, options);\n    portInstance.sendControlChange(message.controller.number, message.value, message.channel, options);\n  },\n  sysex: function sysex(portInstance, message, options) {\n    console.log(\"TODO: Handle outgoing messages w/ type=sysex\");\n  },\n\n  /**\r\n   * This sends a raw message to an output. A raw message should have \r\n   * type: 'raw' and an array of hex or decimal values, with the first\r\n   * value being the status byte. \r\n   * \r\n   * This is probably not stable and is likely to change or be removed in the future\r\n   * as it was carried over from the non-typescript version of MidiPlex and was added\r\n   * to accommodate a niche use case.\r\n   * \r\n   */\n  raw: function raw(portInstance, message, options) {\n    var statusByte = message.data.shift();\n    var data = message.data;\n    portInstance.send(statusByte, data);\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (OutputDevice);\n\n//# sourceURL=webpack://MidiPlex/./src/device/output-device.ts?");

/***/ }),

/***/ "./src/graph/graph-manager.ts":
/*!************************************!*\
  !*** ./src/graph/graph-manager.ts ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _graph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./graph */ \"./src/graph/graph.ts\");\n/* harmony import */ var _util_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/event-emitter */ \"./src/util/event-emitter.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar GraphManager = /*#__PURE__*/function () {\n  function GraphManager(midiplex) {\n    _classCallCheck(this, GraphManager);\n\n    this.midiplex = midiplex;\n    this.events = new _util_event_emitter__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n    this.graphs = new Map();\n  }\n  /**\r\n   * Shorthand wrapper function for this.events.on()\r\n   * \r\n   * @param event \r\n   * @param listener \r\n   */\n\n\n  _createClass(GraphManager, [{\n    key: \"on\",\n    value: function on(event, listener) {\n      this.events.on(event, listener);\n    }\n  }, {\n    key: \"getGraph\",\n    value: function getGraph(id) {\n      return this.graphs.get(id);\n    }\n  }, {\n    key: \"addGraph\",\n    value: function addGraph(id) {\n      var newGraph = new _graph__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.midiplex, id);\n      this.graphs.set(id, newGraph);\n      return newGraph;\n    }\n  }, {\n    key: \"removeGraph\",\n    value: function removeGraph(id) {\n      var graph = this.graphs.get(id);\n      if (!graph) return;\n      graph.deactivate();\n      this.graphs[\"delete\"](id);\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(id) {\n      var graph = this.graphs.get(id);\n      if (!graph) return false;\n      graph.activate();\n    }\n  }, {\n    key: \"deactivate\",\n    value: function deactivate(id) {\n      var graph = this.graphs.get(id);\n      if (!graph) return false;\n      graph.deactivate();\n    }\n  }]);\n\n  return GraphManager;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (GraphManager);\n\n//# sourceURL=webpack://MidiPlex/./src/graph/graph-manager.ts?");

/***/ }),

/***/ "./src/graph/graph.ts":
/*!****************************!*\
  !*** ./src/graph/graph.ts ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _nodes_edges__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../nodes/edges */ \"./src/nodes/edges.ts\");\n/* harmony import */ var _nodes_nodes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../nodes/nodes */ \"./src/nodes/nodes.ts\");\n/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! shortid */ \"./node_modules/shortid/index.js\");\n/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(shortid__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _util_event_emitter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/event-emitter */ \"./src/util/event-emitter.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\nvar MidiPlexGraph = /*#__PURE__*/function () {\n  function MidiPlexGraph(midiplex, id) {\n    _classCallCheck(this, MidiPlexGraph);\n\n    this.id = id;\n    this.midiplex = midiplex;\n    this.events = new _util_event_emitter__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n    this.nodes = new Map();\n  }\n  /**\r\n   * Shorthand wrapper function for this.events.on()\r\n   * \r\n   * @param event \r\n   * @param listener \r\n   */\n\n\n  _createClass(MidiPlexGraph, [{\n    key: \"on\",\n    value: function on(event, listener) {\n      this.events.on(event, listener);\n    }\n  }, {\n    key: \"addNode\",\n    value: function addNode(definition) {\n      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (config.id && this.nodes.has(config.id)) {\n        console.warn(\"Attempted to add a node with an ID that is already in use. Nodes must have a unique ID.\");\n        return;\n      } //Get our node class\n\n\n      var NodeClass = _nodes_nodes__WEBPACK_IMPORTED_MODULE_1__[\"default\"][definition.baseType];\n      if (!NodeClass) return false; //TODO: Add config reconciliation maybe\n\n      var options = {\n        id: config.id || shortid__WEBPACK_IMPORTED_MODULE_2___default.a.generate(),\n        midiplex: this.midiplex,\n        name: definition.name,\n        description: definition.description,\n        tick: definition.tick,\n        receive: definition.receive,\n        inputEdges: definition.inputEdges,\n        outputEdges: definition.outputEdges,\n        state: definition.state,\n        properties: definition.properties,\n        deviceId: config.deviceId,\n        quantize: definition.quantize\n      };\n      var node = new NodeClass(options);\n      this.nodes.set(options.id, node);\n      this.events.emit(\"nodeAdded\", node.id);\n      return node;\n    }\n  }, {\n    key: \"removeNode\",\n    value: function removeNode(nodeId) {\n      var node = this.nodes.get(nodeId);\n      if (!node) return; //TODO - IMPORTANT: Disconnect node's edges from all other edges\n\n      this.nodes[\"delete\"](nodeId);\n      this.events.emit(\"nodeRemoved\", nodeId);\n    }\n    /**\r\n     * Edges can be connected either by providing the actual edge instance or the node/edge keys\r\n     * \r\n     * @param from - The sending edge\r\n     * @param to - The receiving edge\r\n     */\n\n  }, {\n    key: \"connectEdges\",\n    value: function connectEdges(from, to) {\n      var fromEdge = from instanceof _nodes_edges__WEBPACK_IMPORTED_MODULE_0__[\"OutputEdge\"] ? from : this.getOutputEdge(from.nodeId, from.edgeId);\n      var toEdge = to instanceof _nodes_edges__WEBPACK_IMPORTED_MODULE_0__[\"InputEdge\"] ? to : this.getInputEdge(to.nodeId, to.edgeId);\n      if (!fromEdge || !toEdge) return false;\n      return fromEdge.node.to(fromEdge.id, toEdge);\n    }\n    /**\r\n     * Edges can be connected either by providing the actual edge instance or the node/edge keys\r\n     * \r\n     * @param from - The sending edge\r\n     * @param to - The receiving edge\r\n     */\n\n  }, {\n    key: \"disconnectEdges\",\n    value: function disconnectEdges(from, to) {\n      var fromEdge = from instanceof _nodes_edges__WEBPACK_IMPORTED_MODULE_0__[\"OutputEdge\"] ? from : this.getOutputEdge(from.nodeId, from.edgeId);\n      var toEdge = to instanceof _nodes_edges__WEBPACK_IMPORTED_MODULE_0__[\"InputEdge\"] ? to : this.getInputEdge(to.nodeId, to.edgeId);\n      if (!fromEdge || !toEdge) return false; //return fromEdge.node.to(fromEdge.id, toEdge);\n    }\n  }, {\n    key: \"getInputEdge\",\n    value: function getInputEdge(nodeId, edgeId) {\n      var node = this.nodes.get(nodeId);\n      if (!node) return false;\n      return node.getInputEdge(edgeId);\n    }\n  }, {\n    key: \"getOutputEdge\",\n    value: function getOutputEdge(nodeId, edgeId) {\n      var node = this.nodes.get(nodeId);\n      if (!node) return false;\n      return node.getOutputEdge(edgeId);\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      this.nodes.forEach(function (node) {\n        return node.activate();\n      });\n    }\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      this.nodes.forEach(function (node) {\n        return node.deactivate();\n      });\n    }\n  }]);\n\n  return MidiPlexGraph;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (MidiPlexGraph);\n\n//# sourceURL=webpack://MidiPlex/./src/graph/graph.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! exports provided: MidiPlex, Nodes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _definitions_definitions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./definitions/definitions */ \"./src/definitions/definitions.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Nodes\", function() { return _definitions_definitions__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* harmony import */ var _midiplex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./midiplex */ \"./src/midiplex.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MidiPlex\", function() { return _midiplex__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\n\n\n\n\n\n//# sourceURL=webpack://MidiPlex/./src/index.ts?");

/***/ }),

/***/ "./src/midiplex.ts":
/*!*************************!*\
  !*** ./src/midiplex.ts ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MidiPlex; });\n/* harmony import */ var webmidi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! webmidi */ \"./node_modules/webmidi/webmidi.min.js\");\n/* harmony import */ var webmidi__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(webmidi__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _util_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/event-emitter */ \"./src/util/event-emitter.js\");\n/* harmony import */ var _device_device_manager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./device/device-manager */ \"./src/device/device-manager.ts\");\n/* harmony import */ var _graph_graph_manager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./graph/graph-manager */ \"./src/graph/graph-manager.ts\");\n/* harmony import */ var _clock_clock_sync__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./clock/clock-sync */ \"./src/clock/clock-sync.ts\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\nvar MidiPlex = /*#__PURE__*/function () {\n  //WebMidi instance is public so that it can be accessed directly if need be\n  function MidiPlex(devices) {\n    var _this = this;\n\n    _classCallCheck(this, MidiPlex);\n\n    this.webmidi = webmidi__WEBPACK_IMPORTED_MODULE_0___default.a;\n    this.events = new _util_event_emitter__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n    this.graphs = new _graph_graph_manager__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this);\n    this.clock = new _clock_clock_sync__WEBPACK_IMPORTED_MODULE_4__[\"ClockSync\"](webmidi__WEBPACK_IMPORTED_MODULE_0___default.a); //Enable our WebMidi instance\n\n    this.webmidi.enable(function (err) {\n      if (err) throw err;\n      _this.devices = new _device_device_manager__WEBPACK_IMPORTED_MODULE_2__[\"default\"](_this.webmidi, devices);\n\n      _this.events.emit(\"ready\", _this);\n    }, true);\n  }\n  /**\r\n   * Shorthand wrapper function for this.events.on()\r\n   * \r\n   * @param event \r\n   * @param listener \r\n   */\n\n\n  _createClass(MidiPlex, [{\n    key: \"on\",\n    value: function on(event, listener) {\n      this.events.on(event, listener);\n    }\n  }]);\n\n  return MidiPlex;\n}();\n\n\n\n//# sourceURL=webpack://MidiPlex/./src/midiplex.ts?");

/***/ }),

/***/ "./src/nodes/base-node.ts":
/*!********************************!*\
  !*** ./src/nodes/base-node.ts ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BaseNode; });\n/* harmony import */ var _edges__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./edges */ \"./src/nodes/edges.ts\");\n/* harmony import */ var _config_quantize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config/quantize */ \"./src/config/quantize.ts\");\n/* harmony import */ var _message_generator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./message-generator */ \"./src/nodes/message-generator.ts\");\n/* harmony import */ var _util_event_emitter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/event-emitter */ \"./src/util/event-emitter.js\");\n/* harmony import */ var lodash_clonedeep__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash.clonedeep */ \"./node_modules/lodash.clonedeep/index.js\");\n/* harmony import */ var lodash_clonedeep__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_clonedeep__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _properties_properties__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./properties/properties */ \"./src/nodes/properties/properties.ts\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n/**\r\n * The NodeOptions interface should represent the reconciliation of two other objects\r\n * implementing NodeDefinition and NodeConfig respectively. This reconciliation is \r\n * performed at the graph-level. The NodeOptions object must also importantly contain\r\n * an id string and a reference to master global MidiPlex object.\r\n * \r\n */\n\nvar BaseNode = /*#__PURE__*/function () {\n  function BaseNode(options) {\n    var _this = this;\n\n    _classCallCheck(this, BaseNode);\n\n    this.id = options.id;\n    this.events = new _util_event_emitter__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n    this.midiplex = options.midiplex;\n    this.inputEdges = new Map();\n    this.outputEdges = new Map();\n    this._quantize = options.quantize; //Definition Bindings\n\n    this.properties = new Map();\n    this.receiveFunction = options.receive;\n    this.tickFunction = options.tick;\n    this.definitionState = options.state;\n    /**\r\n     * Populate our input and output edges based on the given config\r\n     */\n\n    options.inputEdges.forEach(function (inputEdgeConfig) {\n      var input = new _edges__WEBPACK_IMPORTED_MODULE_0__[\"InputEdge\"](_this, inputEdgeConfig.name, inputEdgeConfig.receives);\n\n      _this.inputEdges.set(input.id, input);\n    });\n    options.outputEdges.forEach(function (outputEdgeConfig) {\n      var output = new _edges__WEBPACK_IMPORTED_MODULE_0__[\"OutputEdge\"](_this, outputEdgeConfig.name, outputEdgeConfig.sends);\n\n      _this.outputEdges.set(output.id, output);\n    });\n    /**\r\n     * Populate our properties map w/ the properties from the definition file\r\n     */\n\n    for (var name in options.properties) {\n      var config = options.properties[name];\n      this.properties.set(name, new _properties_properties__WEBPACK_IMPORTED_MODULE_5__[\"default\"][config.type](config));\n    }\n\n    this.tick = this.tick.bind(this);\n    this.receive = this.receive.bind(this);\n  }\n  /**\r\n   * \r\n   * @param fromEdgeId - The id of this node's edge to connect\r\n   * @param toEdge - An edge\r\n   */\n\n\n  _createClass(BaseNode, [{\n    key: \"to\",\n    value: function to(fromEdgeName, toEdge) {\n      /**\r\n       * Validate our connection\r\n       */\n      var outputEdge = this.outputEdges.get(this.id + \":\" + fromEdgeName);\n\n      switch (true) {\n        case toEdge.node === this: //Nodes cannot send to their own edges\n\n        case !outputEdge:\n          return false;\n        //The edge doesn't exist on this node\n        // case !toEdge.isCompatible(outputEdge): return false; //Edges must have at least one send/receive type in common\n        //TODO - IMPORTANT: Add case to check whether a closed loop is formed\n      }\n\n      outputEdge.toEdges.set(toEdge.id, toEdge); //Give this node's edge a downstream receiving edge\n\n      toEdge.fromEdges.set(outputEdge.id, outputEdge); //Give the other node's edge an upstream sending edge\n\n      return new _edges__WEBPACK_IMPORTED_MODULE_0__[\"EdgeConnection\"](outputEdge, toEdge);\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect(fromEdgeId, toEdge) {\n      /**\r\n       * Validate our connection\r\n       */\n      var outputEdge = this.outputEdges.get(fromEdgeId);\n      if (!outputEdge) return false;\n      outputEdge.toEdges[\"delete\"](toEdge.id);\n      toEdge.fromEdges[\"delete\"](outputEdge.id);\n      return true; //return new EdgeConnection(outputEdge, toEdge);\n    }\n    /**\r\n     * Shorthand wrapper function for this.events.on()\r\n     * \r\n     * @param event \r\n     * @param listener \r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, listener) {\n      this.events.on(event, listener);\n    }\n    /**\r\n     * Returns the input edge with the given ID if it exists, otherwise returns false\r\n     * \r\n     * @param edgeId\r\n     */\n\n  }, {\n    key: \"getInputEdge\",\n    value: function getInputEdge(edgeName) {\n      return this.inputEdges.get(this.id + \":\" + edgeName);\n    }\n    /**\r\n     *  Returns the output edge with the given ID if it exists, otherwise returns false\r\n     * \r\n     * @param edgeId\r\n     */\n\n  }, {\n    key: \"getOutputEdge\",\n    value: function getOutputEdge(edgeName) {\n      return this.outputEdges.get(this.id + \":\" + edgeName);\n    }\n  }, {\n    key: \"quantize\",\n    value: function quantize(value) {\n      if (!value) return this._quantize;else this._applyQuantize(value);\n    }\n    /**\r\n     * Get or set a property. This method is exposed to the definition functions as well\r\n     * as public facing api.\r\n     */\n\n  }, {\n    key: \"property\",\n    value: function property(name, value) {\n      var prop = this.properties.get(name);\n\n      if (value === undefined) {\n        return prop.value;\n      } else {\n        prop.value = value;\n        this.events.emit(\"propertyChange\", name, value);\n      }\n    }\n    /**\r\n     * Callback function used by midiplex.clock when this node has a quantize value.\r\n     * \r\n     * TODO: Some potential optimizations might include not rebuilding the tick function's\r\n     * context everytime this function is called and removing the cloneDeep function.\r\n     * \r\n     * @param clockEventData - Clock data as provided by \r\n     */\n\n  }, {\n    key: \"tick\",\n    value: function tick(clockEventData) {\n      var _this2 = this;\n\n      try {\n        this.tickFunction.apply({\n          state: this.definitionState,\n          generator: _message_generator__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n          data: lodash_clonedeep__WEBPACK_IMPORTED_MODULE_4___default()(clockEventData),\n          quantize: function quantize(value) {\n            return _this2.quantize(value);\n          },\n          prop: function prop(name, value) {\n            return _this2.property(name, value);\n          },\n          send: function send(message, outputEdgeName) {\n            return _this2._send(message, outputEdgeName);\n          }\n        });\n      } catch (err) {\n        this.events.emit(\"error\", err);\n      }\n    }\n    /**\r\n     * At the moment messages first arrive at an input edge, which calls its parent's receive() method.\r\n     * The parent has no awareness of which edge the message was received from.\r\n     * \r\n     * TODO: Assess performance of using cloneDeep here\r\n     * \r\n     * @param message\r\n     * @param receivingEdgeId\r\n     */\n\n  }, {\n    key: \"receive\",\n    value: function receive(message, receivingEdgeId) {\n      var _this3 = this;\n\n      try {\n        this.receiveFunction.apply({\n          state: this.definitionState,\n          generator: _message_generator__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n          message: message,\n          quantize: function quantize(value) {\n            return _this3.quantize(value);\n          },\n          prop: function prop(name, value) {\n            return _this3.property(name, value);\n          },\n          send: function send(message, outputEdgeName) {\n            return _this3._send(message, outputEdgeName);\n          }\n        });\n      } catch (err) {\n        this.events.emit(\"error\", err);\n      }\n    }\n    /**\r\n     * Applies quantize state\r\n     * \r\n     * @param value - The qauntize value or false to remove quantize\r\n     */\n\n  }, {\n    key: \"_applyQuantize\",\n    value: function _applyQuantize(value) {\n      //If a valid quantize value was given\n      if (value && _config_quantize__WEBPACK_IMPORTED_MODULE_1__[\"default\"][value] !== undefined) {\n        //Remove existing listener\n        if (this._quantize) {\n          this.midiplex.clock.events.removeListener(\"start\", this.tick);\n          this.midiplex.clock.events.removeListener(\"stop\", this.tick);\n          this.midiplex.clock.events.removeListener(this._quantize, this.tick);\n        }\n\n        this._quantize = value;\n        this.midiplex.clock.events.on(\"start\", this.tick);\n        this.midiplex.clock.events.on(\"stop\", this.tick);\n        this.midiplex.clock.events.on(this._quantize, this.tick);\n        return;\n      } //If false was given, just remove our quantize\n\n\n      if (!value && this._quantize) {\n        this.midiplex.clock.events.removeListener(this._quantize, this.tick);\n      }\n\n      this._quantize = false;\n      return;\n    }\n    /**\r\n     * Internal send function which is exposed to this node's defintion\r\n     * \r\n     * @param message \r\n     * @param outputEdgeName \r\n     */\n\n  }, {\n    key: \"_send\",\n    value: function _send(message, outputEdgeName) {\n      /**\r\n       * Loop through all the downstream edges associated with the given output edge\r\n       * and send the message to each...\r\n       */\n      this.outputEdges.get(this.id + \":\" + outputEdgeName).toEdges.forEach(function (edge) {\n        /**\r\n         * TODO: Clonedeep was moved to the receive() function. Does this change behavior at all?\r\n         */\n        edge.node.receive(message, edge.id);\n      });\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      /**\r\n       * Adds our quantize events and initializes this._quantize\r\n       */\n      this._applyQuantize(this._quantize);\n    }\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      /**\r\n       * Remove our quantize event\r\n       */\n      this._applyQuantize(false);\n    }\n  }]);\n\n  return BaseNode;\n}();\n\n\n\n//# sourceURL=webpack://MidiPlex/./src/nodes/base-node.ts?");

/***/ }),

/***/ "./src/nodes/edges.ts":
/*!****************************!*\
  !*** ./src/nodes/edges.ts ***!
  \****************************/
/*! exports provided: OutputEdge, InputEdge, EdgeConnection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OutputEdge\", function() { return OutputEdge; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InputEdge\", function() { return InputEdge; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EdgeConnection\", function() { return EdgeConnection; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar InputEdge = /*#__PURE__*/function () {\n  //The edge reference id\n  //The node to which this edge belongs\n  //References to the upstream edges leading to this one\n  function InputEdge(node, name, receiveTypes) {\n    _classCallCheck(this, InputEdge);\n\n    this.id = node.id + \":\" + name; //An edge's ID is a combination of the node id and the egde's name\n\n    this.name = name;\n    this.node = node;\n    this.receiveTypes = receiveTypes;\n    this.fromEdges = new Map();\n  }\n\n  _createClass(InputEdge, [{\n    key: \"isCompatible\",\n    value: function isCompatible(outputEdge) {\n      switch (true) {\n        case outputEdge.sendTypes.length === 0:\n          return false;\n\n        case this.receiveTypes.length === 0:\n          return false;\n\n        case outputEdge.sendTypes.includes(\"all\"):\n          return true;\n      }\n\n      for (var i = 0; i < outputEdge.sendTypes.length; i++) {\n        if (this.receiveTypes.includes(outputEdge.sendTypes[i])) return true;\n      }\n\n      return false;\n    }\n  }]);\n\n  return InputEdge;\n}();\n\nvar OutputEdge = /*#__PURE__*/function () {\n  function OutputEdge(node, name, sendTypes) {\n    _classCallCheck(this, OutputEdge);\n\n    this.id = node.id + \":\" + name; //An edge's ID is a combination of the node id and the egde's name\n\n    this.name = name;\n    this.node = node;\n    this.sendTypes = sendTypes;\n    this.toEdges = new Map();\n  }\n\n  _createClass(OutputEdge, [{\n    key: \"isCompatible\",\n    value: function isCompatible(inputEdge) {\n      switch (true) {\n        case inputEdge.receiveTypes.length === 0:\n          return false;\n\n        case this.sendTypes.length === 0:\n          return false;\n\n        case inputEdge.receiveTypes.includes(\"all\"):\n          return true;\n      }\n\n      for (var i = 0; i < inputEdge.receiveTypes.length; i++) {\n        if (this.sendTypes.includes(inputEdge.receiveTypes[i])) return true;\n      }\n\n      return false;\n    }\n  }]);\n\n  return OutputEdge;\n}();\n\nvar EdgeConnection = /*#__PURE__*/function () {\n  function EdgeConnection(output, input) {\n    _classCallCheck(this, EdgeConnection);\n\n    this.output = output;\n    this.input = input;\n    this._connected = true;\n    output.toEdges.set(input.id, input);\n    input.fromEdges.set(output.id, output);\n  }\n\n  _createClass(EdgeConnection, [{\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.output.toEdges[\"delete\"](this.input.id);\n      this.input.fromEdges[\"delete\"](this.output.id);\n      this._connected = false;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return this._connected;\n    }\n  }]);\n\n  return EdgeConnection;\n}(); // class OutputEdge {\n//     public key: string;\n//     public sendTypes: Array<string>;\n//     public outputs: Map<string, InputEdge>;\n//     constructor(parentNode: BaseNode, key:string, sendTypes:Array<string>){\n//         this.key = key;\n//         this.sendTypes = sendTypes;\n//         this.outputs = new Map<string, InputEdge>();\n//     }\n//     /**\n//      * Sends a message to all of this edge's outputs\n//      * \n//      * @param message - A midi message object\n//      */\n//     send(message: MidiMessage){\n//         this.outputs.forEach((inputEdge) => {\n//             inputEdge.receive(message);\n//         });\n//     }\n//     to(input: InputEdge): boolean {\n//         /**\n//          * TODO: Validate connection and return false if the connection is illegal\n//          *  - Cannot go to own edges\n//          *  - Cannot form loop (traverse tree and make sure no downstream edge connects to one of this edge's inputs)\n//          *  - Log a console warning if a closed loop is attempted\n//          */\n//         this.outputs.set(input.key, input);\n//         input.inputs.set(this.key, this); //Add \n//         return true;\n//     }\n//     disconnect(key: string): boolean {\n//         return this.outputs.delete(key);\n//     }\n// }\n// class InputEdge {\n//     private parentNode: BaseNode;\n//     public key: string;\n//     public receiveTypes: Array<string>;\n//     public inputs: Map<string, OutputEdge>;\n//     constructor(parentNode: BaseNode, key:string, receiveTypes:Array<string>){\n//         this.key = key;\n//         this.receiveTypes = receiveTypes;\n//         this.inputs = new Map<string, OutputEdge>();\n//     }\n//     /**\n//      * This function adds an edge to this edge's inputs map WITHOUT adding itself to the\n//      * given edge's own map. In other words, this function establishes a ONE-WAY connection\n//      * between two nodes.\n//      */\n//     addEdgeToInputs(output: OutputEdge){\n//         this.inputs.set(output.key, output);\n//     }\n//     from(output: OutputEdge): boolean {\n//         /**\n//          * TODO: Validate connection and return false if the connection is illegal\n//          *  - Cannot go to own edges\n//          *  - Cannot form loop (traverse tree and make sure no downstream edge connects to one of this edge's inputs)\n//          *  - Log a console warning if a closed loop is attempted\n//          */\n//         this.outputs.set(input.key, input);\n//         return true;\n//     }\n//     receive(message: MidiMessage){\n//         //TODO: Check first if the message is of the correct type\n//         this.parentNode.receive(message);\n//     }\n//     disconnect(key: string): boolean {\n//         return this.inputs.delete(key);\n//     }\n// }\n// interface IEdge {\n//     id: string,\n//     outputEdges: Array<{}>,\n//     receiveTypes: []\n// }\n\n\n\n\n//# sourceURL=webpack://MidiPlex/./src/nodes/edges.ts?");

/***/ }),

/***/ "./src/nodes/filter-node.ts":
/*!**********************************!*\
  !*** ./src/nodes/filter-node.ts ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return FilterNode; });\n/* harmony import */ var _base_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base-node */ \"./src/nodes/base-node.ts\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\nvar FilterNode = /*#__PURE__*/function (_BaseNode) {\n  _inherits(FilterNode, _BaseNode);\n\n  var _super = _createSuper(FilterNode);\n\n  function FilterNode(options) {\n    _classCallCheck(this, FilterNode);\n\n    return _super.call(this, options);\n  } // public activate(){\n  //     //this.midiplex.clock.\n  //     //TODO: Once the clock is implemented, a quantize event subscription will go here\n  //     //and be removed on deactivate();\n  // }\n  // public deactive(){\n  //     //TODO: See note on activate()\n  // }\n\n\n  return FilterNode;\n}(_base_node__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n\n\n//# sourceURL=webpack://MidiPlex/./src/nodes/filter-node.ts?");

/***/ }),

/***/ "./src/nodes/input-node.ts":
/*!*********************************!*\
  !*** ./src/nodes/input-node.ts ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return InputNode; });\n/* harmony import */ var _base_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base-node */ \"./src/nodes/base-node.ts\");\n/* harmony import */ var _config_input_event_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config/input-event-types */ \"./src/config/input-event-types.ts\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\nvar InputNode = /*#__PURE__*/function (_BaseNode) {\n  _inherits(InputNode, _BaseNode);\n\n  var _super = _createSuper(InputNode);\n\n  function InputNode(options, deviceId) {\n    var _this;\n\n    _classCallCheck(this, InputNode);\n\n    _this = _super.call(this, options);\n    _this.deviceId = deviceId;\n    return _this;\n  }\n\n  _createClass(InputNode, [{\n    key: \"_handleDeviceRemoved\",\n    value: function _handleDeviceRemoved(removedDeviceId) {\n      if (removedDeviceId === this.deviceId) {\n        this.deviceId = 'nulldevice'; //TODO: this.events.emit(\"deviceChanged\", this.deviceId);\n      }\n    }\n  }, {\n    key: \"setDeviceId\",\n    value: function setDeviceId(deviceId) {\n      if (deviceId === this.deviceId) return false;\n      /**\r\n       * Remove existing listener using this node's ID which should be the same one we\r\n       * used to register the events originally \r\n       */\n\n      this.midiplex.devices.removeInputEvent(this.deviceId, this.id);\n      /**\r\n       * Add new device listener if this node is already active, and assign new reference ID\r\n       */\n\n      this.deviceId = deviceId;\n\n      if (this.active) {\n        this.midiplex.devices.addInputEvent(this.deviceId, {\n          id: this.id,\n          //We use this node's ID so that we have an easy way to remove these events later\n          events: _config_input_event_types__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n          listener: this.receive.bind(this)\n        });\n      }\n\n      this.events.emit(\"deviceChanged\", this);\n    }\n  }, {\n    key: \"getDeviceId\",\n    value: function getDeviceId() {\n      return this.deviceId;\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      console.log(\"Node Activated: \" + this.id);\n      this.midiplex.devices.on(\"deviceRemoved\", this._handleDeviceRemoved.bind(this));\n      this.midiplex.devices.addInputEvent(this.deviceId, {\n        id: this.id,\n        //We use this node's ID so that we have an easy way to remove these events later\n        events: _config_input_event_types__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n        listener: this.receive.bind(this)\n      });\n      this.active = true;\n    }\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      this.midiplex.devices.events.removeListener(\"deviceRemoved\", this._handleDeviceRemoved.bind(this));\n      this.midiplex.devices.addInputEvent(this.deviceId, {\n        id: this.id,\n        events: _config_input_event_types__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n        listener: this.receive.bind(this)\n      });\n      this.active = false;\n    }\n    /**\r\n     * Override parent receive message as the InputNode will only be receiving messages\r\n     * directly from device input events.\r\n     * \r\n     * @param {Object} message - A WebMidiJS message object\r\n     */\n\n  }, {\n    key: \"receive\",\n    value: function receive(message, receivingEdgeId) {\n      console.log(\"Received from Device: \" + this.id + \":in\");\n      /**\r\n       * Since the input node is receiving directly from a device event,\r\n       * no receivingEdge is specified. Below simply adds a receiving\r\n       * edge before calling the definition binding to prevent an error.\r\n       */\n\n      _get(_getPrototypeOf(InputNode.prototype), \"receive\", this).call(this, message, this.id + \":in\");\n    }\n  }]);\n\n  return InputNode;\n}(_base_node__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n\n\n//# sourceURL=webpack://MidiPlex/./src/nodes/input-node.ts?");

/***/ }),

/***/ "./src/nodes/message-generator.ts":
/*!****************************************!*\
  !*** ./src/nodes/message-generator.ts ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar Notes = {\n  \"C\": 0,\n  \"C#\": 1,\n  \"Db\": 1,\n  \"D\": 2,\n  \"D#\": 3,\n  \"Eb\": 3,\n  \"E\": 4,\n  \"F\": 5,\n  \"F#\": 6,\n  \"Gb\": 6,\n  \"G\": 7,\n  \"G#\": 8,\n  \"Ab\": 8,\n  \"A\": 9,\n  \"A#\": 10,\n  \"Bb\": 10,\n  \"B\": 11\n};\nvar MessageGenerator = {\n  /**\r\n   * \r\n   * @param note \r\n   * @param velocity \r\n   */\n  noteon: function noteon(note, velocity) {\n    var name = note.replace(/[0-9-]/g, '');\n    var octave = parseInt(note.replace(/[^\\d.-]/g, ''));\n    var number = Notes[name] + (octave + 1) * 12;\n    return {\n      channel: 1,\n      type: \"noteon\",\n      note: {\n        number: number,\n        name: note,\n        octave: octave\n      },\n      velocity: 1,\n      rawVelocity: 1\n    };\n  },\n  noteoff: function noteoff(note, velocity) {\n    var name = note.replace(/[0-9-]/g, '');\n    var octave = parseInt(note.replace(/[^\\d.-]/g, ''));\n    var number = Notes[name] + (octave + 1) * 12;\n    return {\n      channel: 1,\n      type: \"noteoff\",\n      note: {\n        number: number,\n        name: note,\n        octave: octave\n      },\n      velocity: 1,\n      rawVelocity: 1\n    };\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (MessageGenerator); // data Uint8Array\n// The raw MIDI message as an array of 8 bit values.\n// timestamp Number\n// The time when the event occurred (in milliseconds)\n// channel Uint\n// The channel where the event occurred (between 1 and 16).\n// type String\n// The type of event that occurred.\n// note Object\n// number Uint\n// The MIDI note number.\n// name String\n// The usual note name (C, C#, D, D#, etc.).\n// octave Uint\n// The octave (between -2 and 8).\n// velocity Number\n// The attack velocity (between 0 and 1).\n// rawVelocity Number\n// The attack velocity expressed as a 7-bit integer (between 0 and 127).\n\n//# sourceURL=webpack://MidiPlex/./src/nodes/message-generator.ts?");

/***/ }),

/***/ "./src/nodes/nodes.ts":
/*!****************************!*\
  !*** ./src/nodes/nodes.ts ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _filter_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./filter-node */ \"./src/nodes/filter-node.ts\");\n/* harmony import */ var _input_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./input-node */ \"./src/nodes/input-node.ts\");\n/* harmony import */ var _output_node__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./output-node */ \"./src/nodes/output-node.ts\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  filter: _filter_node__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  input: _input_node__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  output: _output_node__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n});\n\n//# sourceURL=webpack://MidiPlex/./src/nodes/nodes.ts?");

/***/ }),

/***/ "./src/nodes/output-node.ts":
/*!**********************************!*\
  !*** ./src/nodes/output-node.ts ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return OutputNode; });\n/* harmony import */ var _base_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base-node */ \"./src/nodes/base-node.ts\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\nvar OutputNode = /*#__PURE__*/function (_BaseNode) {\n  _inherits(OutputNode, _BaseNode);\n\n  var _super = _createSuper(OutputNode);\n\n  function OutputNode(options, deviceId) {\n    var _this;\n\n    _classCallCheck(this, OutputNode);\n\n    _this = _super.call(this, options);\n    _this.deviceId = deviceId;\n    return _this;\n  }\n\n  _createClass(OutputNode, [{\n    key: \"setDeviceId\",\n    value: function setDeviceId(deviceId) {\n      this.deviceId = deviceId;\n    }\n  }, {\n    key: \"getDeviceId\",\n    value: function getDeviceId() {\n      return this.deviceId;\n    }\n    /**\r\n     * The OutputNode overrides the default receive() method, sending the\r\n     * MidiMessage to its device endpoint rather than another node\r\n     */\n\n  }, {\n    key: \"receive\",\n    value: function receive(message, inputEdgeId) {\n      // console.log(\"Received at Endpoint: \" + inputEdgeId);\n      // console.log(this.deviceId);\n      this.midiplex.devices.send(this.deviceId, message);\n    } //The active state for this class doesn't actually do anything at the moment\n\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      this.active = true;\n    }\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      this.active = false;\n    }\n  }]);\n\n  return OutputNode;\n}(_base_node__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n\n\n//# sourceURL=webpack://MidiPlex/./src/nodes/output-node.ts?");

/***/ }),

/***/ "./src/nodes/properties/boolean.ts":
/*!*****************************************!*\
  !*** ./src/nodes/properties/boolean.ts ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BooleanProperty; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar BooleanProperty = /*#__PURE__*/function () {\n  function BooleanProperty(params) {\n    _classCallCheck(this, BooleanProperty);\n\n    this._value = params.value || false;\n  }\n\n  _createClass(BooleanProperty, [{\n    key: \"value\",\n    set: function set(value) {\n      this._value = value;\n    },\n    get: function get() {\n      return this._value;\n    }\n  }]);\n\n  return BooleanProperty;\n}();\n\n\n\n//# sourceURL=webpack://MidiPlex/./src/nodes/properties/boolean.ts?");

/***/ }),

/***/ "./src/nodes/properties/list.ts":
/*!**************************************!*\
  !*** ./src/nodes/properties/list.ts ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ListProperty; });\n/* harmony import */ var _properties__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./properties */ \"./src/nodes/properties/properties.ts\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar ListProperty = /*#__PURE__*/function () {\n  /**\r\n   * Contains the resolved property array\r\n   */\n\n  /**\r\n   * Contains the params object for a property type\r\n   */\n  function ListProperty(params) {\n    var _this = this;\n\n    _classCallCheck(this, ListProperty);\n\n    this._itemTypeConfig = params.items || {};\n\n    if (!params.value || !Array.isArray(params.value)) {\n      this._value = [];\n    } else {\n      /**\r\n       * Merges prop values as defined in params.values w/ the item config,\r\n       * creating the params object for the given property class\r\n       */\n      this._value = params.value.map(function (propValues) {\n        return new _properties__WEBPACK_IMPORTED_MODULE_0__[\"default\"][_this._itemTypeConfig.type](Object.assign({}, params.items, {\n          value: propValues\n        }));\n      });\n    }\n  }\n\n  _createClass(ListProperty, [{\n    key: \"value\",\n    get: function get() {\n      return this._value.map(function (prop) {\n        return prop.value;\n      });\n    },\n    set: function set(value) {\n      var _this2 = this;\n\n      this._value = value.map(function (propValues) {\n        return new _properties__WEBPACK_IMPORTED_MODULE_0__[\"default\"][_this2._itemTypeConfig.type](Object.assign({}, _this2._itemTypeConfig, {\n          value: propValues\n        }));\n      });\n    }\n  }]);\n\n  return ListProperty;\n}();\n\n\n\n//# sourceURL=webpack://MidiPlex/./src/nodes/properties/list.ts?");

/***/ }),

/***/ "./src/nodes/properties/number.ts":
/*!****************************************!*\
  !*** ./src/nodes/properties/number.ts ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return NumberProperty; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar NumberProperty = /*#__PURE__*/function () {\n  function NumberProperty(params) {\n    _classCallCheck(this, NumberProperty);\n\n    this._value = params.value || 0;\n    this.min = params.min || -Infinity;\n    this.max = params.max || Infinity;\n  }\n\n  _createClass(NumberProperty, [{\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    },\n    set: function set(value) {\n      this._value = Math.min(Math.max(value, this.min), this.max);\n    }\n  }]);\n\n  return NumberProperty;\n}();\n\n\n\n//# sourceURL=webpack://MidiPlex/./src/nodes/properties/number.ts?");

/***/ }),

/***/ "./src/nodes/properties/properties.ts":
/*!********************************************!*\
  !*** ./src/nodes/properties/properties.ts ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number */ \"./src/nodes/properties/number.ts\");\n/* harmony import */ var _boolean__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./boolean */ \"./src/nodes/properties/boolean.ts\");\n/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./list */ \"./src/nodes/properties/list.ts\");\n/* harmony import */ var _string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./string */ \"./src/nodes/properties/string.ts\");\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  string: _string__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n  number: _number__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  \"boolean\": _boolean__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  list: _list__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n});\n\n//# sourceURL=webpack://MidiPlex/./src/nodes/properties/properties.ts?");

/***/ }),

/***/ "./src/nodes/properties/string.ts":
/*!****************************************!*\
  !*** ./src/nodes/properties/string.ts ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StringProperty; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar StringProperty = /*#__PURE__*/function () {\n  function StringProperty(params) {\n    _classCallCheck(this, StringProperty);\n\n    this._value = params.value || \"\";\n  }\n\n  _createClass(StringProperty, [{\n    key: \"value\",\n    set: function set(value) {\n      this._value = value;\n    },\n    get: function get() {\n      return this._value;\n    }\n  }]);\n\n  return StringProperty;\n}();\n\n\n\n//# sourceURL=webpack://MidiPlex/./src/nodes/properties/string.ts?");

/***/ }),

/***/ "./src/util/event-emitter.js":
/*!***********************************!*\
  !*** ./src/util/event-emitter.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return EventEmitter; });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar EventEmitter = /*#__PURE__*/function () {\n  function EventEmitter() {\n    _classCallCheck(this, EventEmitter);\n\n    this.events = {};\n  }\n\n  _createClass(EventEmitter, [{\n    key: \"on\",\n    value: function on(event, listener) {\n      var _this = this;\n\n      if (_typeof(this.events[event]) !== 'object') {\n        this.events[event] = [];\n      }\n\n      this.events[event].push(listener);\n      return function () {\n        return _this.removeListener(event, listener);\n      };\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(event, listener) {\n      if (_typeof(this.events[event]) === 'object') {\n        var idx = this.events[event].indexOf(listener);\n\n        if (idx > -1) {\n          this.events[event].splice(idx, 1);\n        }\n      }\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      var _this2 = this;\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      if (_typeof(this.events[event]) === 'object') {\n        this.events[event].forEach(function (listener) {\n          return listener.apply(_this2, args);\n        });\n      }\n    }\n  }, {\n    key: \"once\",\n    value: function once(event, listener) {\n      var _this3 = this;\n\n      var remove = this.on(event, function () {\n        remove();\n\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        listener.apply(_this3, args);\n      });\n    }\n  }]);\n\n  return EventEmitter;\n}();\n\n\n;\n\n//# sourceURL=webpack://MidiPlex/./src/util/event-emitter.js?");

/***/ })

/******/ });
});